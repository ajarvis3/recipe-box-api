{"version":3,"sources":["recoil/LoginState.ts","recoil/UserId.ts","common/styles/index.ts","common/utils/deletetoken.ts","common/SignOut.tsx","common/Header.tsx","recoil/Email.ts","recoil/FirstName.ts","recoil/LastName.ts","recoil/Password.ts","account/fetch/generalfetch.ts","hooks/Cleanup.ts","recoil/utils/getByName.ts","hooks/UseChangeState.ts","hooks/UseStateValue.ts","account/EnterText.tsx","account/utils/settoken.ts","account/styles/index.ts","account/Signup.tsx","account/Signin.tsx","home/Home.tsx","account/fetch/authenticatedfetch.ts","recoil/Search.ts","recoil/UserRecipes.ts","dashboard/recoil/Popup.ts","dashboard/recoil/CurrentRecipeUrl.ts","dashboard/recoil/IsAddState.ts","dashboard/components/add-recipe/UrlInput.tsx","dashboard/recoil/CurrentRecipeIndex.ts","dashboard/components/add-recipe/RecipeFieldInput.tsx","dashboard/components/add-recipe/RecipeFields.tsx","dashboard/components/add-recipe/RecipePopup.tsx","dashboard/components/comments/recoil/EditCommentState.ts","dashboard/components/comments/EditComment.tsx","dashboard/components/comments/DeleteComment.tsx","dashboard/components/comments/Comment.tsx","dashboard/recoil/IsCommentsOpen.ts","dashboard/components/comments/CommentButtons.tsx","dashboard/components/comments/Comments.tsx","dashboard/recoil/ConfirmationOpen.ts","dashboard/recoil/ConfirmationRequest.ts","dashboard/components/confirmation/Confirmation.tsx","dashboard/components/search-and-filter/RecipeSearch.tsx","dashboard/components/header/AddRecipe.tsx","dashboard/components/header/MyRecipes.tsx","dashboard/components/header/RecipeHeader.tsx","dashboard/components/recipe-card/RecipeCardOpenUrl.tsx","dashboard/components/recipe-card/RecipeCardEdit.tsx","dashboard/components/TrashIcon.tsx","dashboard/components/recipe-card/RecipeNotesIcon.tsx","dashboard/components/recipe-card/RecipeCardControl.tsx","dashboard/components/recipe-card/RecipeCardDescription.tsx","dashboard/components/recipe-card/RecipeCardTitle.tsx","dashboard/components/recipe-card/RecipeCardInfo.tsx","dashboard/components/recipe-card/RecipeCard.tsx","dashboard/Dashboard.tsx","auth/Authorization.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["loginState","atom","key","default","userIdState","useCommonStyles","makeStyles","headerLink","content","color","transitionDuration","signInOut","fontSize","deleteToken","localStorage","removeItem","SignOut","setLogin","useSetRecoilState","setUserId","commonClasses","to","onClick","className","useStyles","title","left","margin","header","width","backgroundColor","padding","display","flexDirection","headerItemWrapper","headerRightSide","float","Header","login","useRecoilValue","classes","Box","component","Typography","variant","path","exact","emailState","firstNameState","lastNameState","passwordState","generalFetch","urlPath","body","headers","method","host","url","URL","href","fetch","then","value","status","json","err","console","error","useCleanup","setStates","defaultValue","useEffect","forEach","setState","getByName","name","nameState","replace","charAt","toLowerCase","slice","result","undefined","Object","values","state","some","val","useChangeState","stateAtom","event","target","useStateValue","enterText","textAlign","enterTextInput","borderRadius","EnterText","props","fieldName","type","onChange","text","TextField","placeholder","setToken","data","token","setItem","signUpBox","border","signUpButton","SignUp","useRecoilState","firstName","setFirstName","lastName","setLastName","password","setPassword","email","setEmail","onSubmit","e","preventDefault","JSON","stringify","id","Button","SignIn","signIn","Home","authenticatedFetch","getItem","searchState","userRecipesState","popupState","currentRecipeUrl","isAddState","wrapper","marginTop","marginBottom","input","marginLeft","marginRight","button","fieldSet","UrlInput","setUrl","recipeData","setRecipeData","isAdd","newRecipeData","push","disabled","currentRecipeIndexState","label","item","RecipeFieldInput","Grid","FormLabel","RecipeFields","recipes","setRecipes","recipeIndex","setOpen","currentRecipe","useState","setTitle","author","setAuthor","source","setSource","description","setDescription","imageUrl","setImageUrl","getOnChange","newRecipe","newRecipes","_id","recipe","container","direction","spacing","RecipePopup","open","closeOnDocumentClick","onClose","position","editCommentState","editComment","EditComment","index","comment","setComment","inputRef","useRef","currentRecipeIndex","setEditComment","current","focus","onBlur","newComments","comments","log","delete","cursor","active","DeleteComment","deleteCount","setDeleteCount","DeleteOutlined","splice","handleDelete","setTimeout","box","maxHeight","Comment","isCommentsOpenState","justifyContent","AddComment","setCommentsOpen","Container","paddingTop","Comments","edit","isCommentsOpen","setIndex","recipeElements","map","confirmationOpenState","confirmationRequestState","cancel","Confirmation","confirmationOpen","setConfirmationOpen","confirmationRequest","setConfirmationRequest","closeModal","search","transform","inputProps","RecipeSearch","setSearch","style","recipeHeaderRight","marginBlockStart","marginBlockEnd","marginInlineStart","AddRecipe","setAddState","setCurrentRecipe","myRecipes","MyRecipes","recipeHeader","borderBottom","recipeHeaderItemWrapper","RecipeHeader","openExternal","RecipeCardOpenUrl","win","window","RecipeCardEdit","Edit","trash","TrashIcon","setConfirmationRequestState","handleRequest","catch","menu","RecipeNotesIcon","RecipeCardControl","RecipeCardDescription","RecipeCardTitle","RecipeCardInfo","metadata","root","minWidth","maxWidth","image","imageContainer","RecipeCard","Card","raised","CardContent","src","alt","Dashboard","userId","popupOpen","getSearchRecipes","useCallback","searchLower","filterMethod","str","includes","filter","Authorization","setUserIdState","App","height","theme","createMuiTheme","palette","primary","main","contrastText","secondary","typography","fontFamily","join","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wZAOeA,EALIC,YAAK,CACrBC,IAAK,aACLC,SAAS,ICGGC,EALKH,YAAK,CACtBC,IAAK,cACLC,QAAS,K,SCcGE,EAhBSC,YAAW,CAChCC,WAAY,CACT,UAAW,CACRC,QAAS,KACTC,MAAO,QACPC,mBAAoB,OAEvB,eAAkB,OAClB,MAAS,QACT,OAAU,YAEbC,UAAW,CACRC,SAAU,UCVDC,EAJK,WACjBC,aAAaC,WAAW,U,OC6BZC,EAtBC,WACb,IAAMC,EAAWC,YAAkBlB,GAC7BmB,EAAYD,YAAkBd,GAC9BgB,EAAgBf,IAQtB,OACG,cAAC,IAAD,CACGgB,GAAG,IACHC,QATU,WACbL,GAAS,GACTE,EAAU,IACVN,KAOGU,UAAWH,EAAcT,UAAY,IAAMS,EAAcb,WAH5D,uB,kBCXAiB,EAAYlB,YAAW,CAC1BmB,MAAO,CACJb,SAAU,OACVc,KAAM,EACNC,OAAQ,GAEXC,OAAQ,CACLC,MAAO,OACPF,OAAQ,EACRG,gBAAiB,UACjBrB,MAAO,QACPsB,QAAS,EACTC,QAAS,OACTC,cAAe,OAElBC,kBAAmB,CAChBL,MAAO,MACPE,QAAS,QAEbI,gBAAiB,CACbC,MAAO,QACPT,OAAQ,KA2CCU,EAjCmB,WAC9B,IAAMC,EAAQC,YAAevC,GACvBwC,EAAUhB,IACVJ,EAAgBf,IAEtB,OACG,eAACoC,EAAA,EAAD,CAAKC,UAAU,MAAMnB,UAAWiB,EAAQZ,OAAxC,UACG,cAACa,EAAA,EAAD,CAAKC,UAAU,OAAOnB,UAAWiB,EAAQN,kBAAzC,SACG,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKrB,UAAWiB,EAAQf,MAA5C,SACG,cAAC,IAAD,CAAMJ,GAAG,IAAIE,UAAWH,EAAcb,WAAtC,4BAKN,cAACkC,EAAA,EAAD,CAAKC,UAAU,OAAOnB,UAAWiB,EAAQN,kBAAzC,SACG,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKrB,UAAWiB,EAAQL,gBAA5C,SACG,cAAC,IAAD,UACKG,EAOC,cAAC,EAAD,IANA,cAAC,IAAD,CAAOO,KAAK,IAAIC,OAAK,EAArB,SACG,cAAC,IAAD,CAAMzB,GAAI,UAAWE,UAAWH,EAAcb,WAAa,IAAMa,EAAcT,UAA/E,iC,gBCpDVoC,G,MALI9C,YAAK,CACrBC,IAAK,aACLC,QAAS,MCGG6C,EALQ/C,YAAK,CACzBC,IAAK,iBACLC,QAAS,KCGG8C,EALOhD,YAAK,CACxBC,IAAK,gBACLC,QAAS,KCGG+C,EALOjD,YAAK,CACxBC,IAAK,gBACLC,QAAS,KCqCGgD,EAzCM,SAClBC,EACAC,EACAC,EACAC,GAEKD,IACFA,EAAU,CACP,eAAgB,oCAItB,IACIE,EAAO,yCAEX,IAAMC,EAAM,IAAIC,IAAIN,EAASI,GAAMG,KAYnC,OADgBC,MAAMH,EAVNJ,EACX,CACGE,OAAQA,EACRD,QAASA,EACTD,KAAMA,GAET,CACGE,OAAQA,EACRD,QAASA,IAGFO,MACZ,SAACC,GACE,OAAIA,EAAMC,QAAU,KAAOD,EAAMC,QAAU,IACjCD,EAAME,OAENF,EAAMC,UAGnB,SAACE,GACEC,QAAQC,MAAMF,OCjBRG,MAVf,SAAuBC,EAAiCC,GACrDC,qBAAU,kBACPF,EAAUG,SAAQ,SAACC,GAChBA,EAASH,QAIb,K,SCEUI,EAfG,SAACC,GAEhB,IAAMC,GADND,EAAOA,EAAKE,QAAQ,IAAK,KACFC,OAAO,GAAGC,cAAgBJ,EAAKK,MAAM,GAAK,QAC7DC,OAAuCC,EAS3C,OARAC,OAAOC,OAAOC,GAAOC,MAAK,SAACC,GACxB,OAAIA,EAAIrF,MAAQ0E,IACbK,EAASM,GACF,MAIQN,GCHTO,MARf,SAAwBb,GACrB,IAAMc,EAA0Cf,EAAUC,GACpDF,EAAWvD,YAAkBuE,GACnC,OAAO,SAACC,GACLjB,EAASiB,EAAMC,OAAO7B,SCEb8B,MANf,SAAuBjB,GACpB,IAAMc,EAA0Cf,EAAUC,GAE1D,OADmBpC,YAAekD,ICC/BjE,EAAYlB,YAAW,CAC1BuF,UAAW,CACRlE,OAAQ,WACRmE,UAAW,SACXlF,SAAU,QAEbmF,eAAgB,CACbC,aAAc,MACdvF,MAAO,QACPG,SAAU,OACViB,MAAO,SA6BEoE,EAtBkC,SAACC,GAAuB,IAC9DC,EAAoBD,EAApBC,UAAWC,EAASF,EAATE,KACb5D,EAAUhB,IAEV6E,EAAWb,EAAeW,GAC1BG,EAAOV,EAAcO,GAE3B,OACG,eAAC1D,EAAA,EAAD,CAAKC,UAAU,MAAMnB,UAAWiB,EAAQqD,UAAxC,UACG,eAACpD,EAAA,EAAD,CAAKC,UAAU,MAAf,UAAsByD,EAAtB,OACA,cAACI,EAAA,EAAD,CACGH,KAAMA,EACNI,YAAaL,EACbrC,MAAOwC,EACP/E,UAAWiB,EAAQuD,eACnBpB,KAAMwB,EACNE,SAAUA,QCjCPI,EAJE,SAACC,GACXA,GAAQA,EAAKC,OAAO7F,aAAa8F,QAAQ,QAASF,EAAKC,QCc/CtG,EAfSC,YAAW,CAChCuG,UAAW,CACRlF,OAAQ,OACRmF,OAAQ,oBACRd,aAAc,MACdjE,QAAS,OACTC,QAAS,QACTH,MAAO,OAEVkF,aAAc,CACXpF,OAAQ,WACRmE,UAAW,YCoEFkB,EAxDmB,WAAO,IAAD,EACHC,YAAejE,GADZ,mBAC9BkE,EAD8B,KACnBC,EADmB,OAELF,YAAehE,GAFV,mBAE9BmE,EAF8B,KAEpBC,EAFoB,OAGLJ,YAAe/D,GAHV,mBAG9BoE,EAH8B,KAGpBC,EAHoB,OAIXN,YAAelE,GAJJ,mBAI9ByE,EAJ8B,KAIvBC,EAJuB,OAKXR,YAAejH,GALJ,mBAK9BsC,EAL8B,KAKvBrB,EALuB,KAM/BE,EAAYD,YAAkBd,GAE9BoC,EAAUnC,IAEhB+D,EAAmB,CAAC+C,EAAcE,EAAaE,EAAaE,GAAW,IA6BvE,OAAQnF,EAaL,cAAC,IAAD,CAAUjB,GAAG,MAZb,eAACoB,EAAA,EAAD,CAAKC,UAAU,OAAOnB,UAAWiB,EAAQqE,UAAWa,SA5BtC,SAACC,GACfA,EAAEC,iBACezE,EACd,eACA0E,KAAKC,UAAU,CACZZ,UAAWA,EACXE,SAAUA,EACVI,MAAOA,EACPF,SAAUA,IAEb,CACG,eAAgB,mCAEnB,QAEMzD,MAAK,SAACC,GACZ,GAAqB,kBAAVA,QAEJ,GAAIA,EAIR,OAHA7C,GAAS,GACTE,EAAU2C,EAAMiE,IAChBtB,EAAS3C,EAAM6C,OACR,cAAC,IAAD,CAAUtF,GAAG,UAM1B,UACG,cAAC,EAAD,CAAW8E,UAAW,aAAcC,KAAK,SACzC,cAAC,EAAD,CAAWD,UAAW,YAAaC,KAAK,SACxC,cAAC,EAAD,CAAWD,UAAW,QAASC,KAAK,UACpC,cAAC,EAAD,CAAWD,UAAW,WAAYC,KAAK,aACvC,cAAC3D,EAAA,EAAD,CAAKC,UAAU,MAAMnB,UAAWiB,EAAQuE,aAAxC,SACG,cAACiB,EAAA,EAAD,CAAQpF,QAAQ,YAAYnC,MAAM,UAAU2F,KAAK,SAAjD,2B,iBCDG6B,EAnDmB,WAAO,IAAD,EACLhB,YAAe/D,GADV,mBAC9BoE,EAD8B,KACpBC,EADoB,OAEXN,YAAelE,GAFJ,mBAE9ByE,EAF8B,KAEvBC,EAFuB,OAGXR,YAAejH,GAHJ,mBAG9BsC,EAH8B,KAGvBrB,EAHuB,KAI/BE,EAAYD,YAAkBd,GAE9BoC,EAAUnC,IAEhB+D,EAAmB,CAACmD,EAAaE,GAAW,IA2B5C,OAAQnF,EAYL,cAAC,IAAD,CAAUjB,GAAG,MAXb,eAACoB,EAAA,EAAD,CAAKC,UAAU,OAAOnB,UAAWiB,EAAQqE,UAAWa,SA1BvC,SAACC,GACdA,EAAEC,iBACezE,EACd,cACA0E,KAAKC,UAAU,CACZN,MAAOA,EACPF,SAAUA,IAEb,CACG,eAAgB,mCAEnB,QAEMzD,MAAK,SAACC,GACZ,GAAqB,kBAAVA,QAEJ,GAAIA,EAIR,OAHA7C,GAAS,GACTE,EAAU2C,EAAMiE,IAChBtB,EAAS3C,GACF,cAAC,IAAD,CAAUzC,GAAG,UAM1B,UACG,cAAC,EAAD,CAAW8E,UAAW,QAASC,KAAK,SAEpC,cAAC,EAAD,CAAWD,UAAW,WAAYC,KAAK,aACvC,cAAC3D,EAAA,EAAD,CAAKC,UAAU,MAAMnB,UAAWiB,EAAQuE,aAAxC,SACG,cAACiB,EAAA,EAAD,CAAQpF,QAAQ,YAAYnC,MAAM,UAAU2F,KAAK,SAAjD,2BCxDN5E,EAAYlB,YAAW,CAC1B4H,OAAQ,CACL,UAAW,CACR1H,QAAS,KACTC,MAAO,QACPC,mBAAoB,OAEvB,eAAkB,OAClB,MAAS,QACT,SAAY,UAmBHyH,EAfiB,WAC7B,IAAM3F,EAAUhB,IAChB,OACG,qCACG,cAACmB,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBAEA,cAAC,IAAD,CAAMvB,GAAI,UAAWE,UAAWiB,EAAQ0F,OAAxC,SACG,cAACF,EAAA,EAAD,CAAQpF,QAAQ,YAAYnC,MAAM,UAAlC,2B,SCVG2H,EAZY,SACxBvF,EACAQ,EACAE,GAEA,IAAMD,EAAuB,CAC1B,eAAgB,mBAChB,eAAkB,UAAYxC,aAAauH,QAAQ,UAEtD,OAAOlF,EAAaN,EAAMQ,EAAMC,EAASC,ICJ7B+E,EALKrI,YAAK,CACtBC,IAAK,cACLC,QAAS,KCIGoI,EALUtI,YAAK,CAC3BC,IAAK,mBACLC,QAAS,K,QCEGqI,EALIvI,YAAK,CACrBC,IAAK,aACLC,SAAS,ICGGsI,G,OALUxI,YAAK,CAC3BC,IAAK,mBACLC,QAAS,MCGGuI,EALIzI,YAAK,CACrBC,IAAK,aACLC,SAAS,ICKNqB,EAAYlB,YAAW,CAC1BqI,QAAS,CACN9G,MAAO,OACPE,QAAS,MACT6G,UAAW,KACXC,aAAc,MAEjBC,MAAO,CACJjH,MAAO,MACPkH,WAAY,KACZC,YAAa,MAEhBC,OAAQ,CACL7G,MAAO,QACP4G,YAAa,MAEhBE,SAAU,CACPvH,OAAQ,IACRI,QAAS,IACT+E,OAAQ,UAkDCqC,EA9CqB,WAAO,IAAD,EACjBlC,YAAewB,GADE,mBAChChF,EADgC,KAC3B2F,EAD2B,OAEHnC,YAAesB,GAFZ,mBAEhCc,EAFgC,KAEpBC,EAFoB,KAGjCC,EAAQhH,YAAemG,GAEvBlG,EAAUhB,IAmBhB,OACG,cAACiB,EAAA,EAAD,CAAKC,UAAU,OAAOnB,UAAWiB,EAAQmG,QAASjB,SAlBrC,SAACC,GACdA,EAAEC,iBACFQ,EACG,kBACAP,KAAKC,UAAU,CAAErE,QACjB,QACDI,MAAK,SAACC,GACL,IAAM0F,EAAgBH,EAAWrE,QACjCwE,EAAcC,KAAK3F,GACnBwF,EAAcE,OASjB,SACA,2BAAUjI,UAAWiB,EAAQ0G,SAAUQ,UAAWH,EAAlD,UACG,cAAChD,EAAA,EAAD,CACAH,KAAK,OACLtC,MAAOL,EACP4C,SAVW,SAACsB,GACfyB,EAAOzB,EAAEhC,OAAO7B,QAUb0C,YAAY,aACZjF,UAAWiB,EAAQsG,QAChBS,GACH,cAACvB,EAAA,EAAD,CACGzG,UAAWiB,EAAQyG,OACnBrG,QAAQ,YACRnC,MAAM,YACN2F,KAAK,SAJR,8B,QC3DMuD,GALiB1J,YAAK,CAClCC,IAAK,0BACLC,SAAU,I,UCGPqB,GAAYlB,YAAW,CAC1BsJ,MAAO,CACJb,WAAY,KACZC,YAAa,KACbJ,UAAW,GACX5G,QAAS,gBAEZ6H,KAAM,CACHlI,OAAQ,GAEXmH,MAAO,KAsBKgB,GAnBqD,SACjE5D,GACG,IACKG,EAA+BH,EAA/BG,SAAUvC,EAAqBoC,EAArBpC,MAAOqC,EAAcD,EAAdC,UACnB3D,EAAUhB,KAEhB,OACG,eAACuI,EAAA,EAAD,CAAMF,MAAI,EAACtI,UAAWiB,EAAQqH,KAA9B,UACG,eAACG,GAAA,EAAD,CAAWzI,UAAWiB,EAAQoH,MAA9B,UAAsCzD,EAAtC,OACA,cAACI,EAAA,EAAD,CACGhF,UAAWiB,EAAQsG,MACnB1C,KAAK,OACLtC,MAAOA,EACPuC,SAAUA,QCgEP4D,GAnFyB,WAAO,IAAD,EACbhD,YAAesB,GADF,mBACpC2B,EADoC,KAC3BC,EAD2B,KAErCC,EAAc7H,YAAeoH,IAC7BU,EAAUnJ,YAAkBsH,GAE5B8B,EAAgBJ,EAAQE,GALa,EAQjBG,mBAASD,EAAc7I,OARN,mBAQpCA,EARoC,KAQ7B+I,EAR6B,OASfD,mBAASD,EAAcG,QATR,mBASpCA,EAToC,KAS5BC,EAT4B,OAUfH,mBAASD,EAAcK,QAVR,mBAUpCA,EAVoC,KAU5BC,EAV4B,OAWLL,mBAASD,EAAcO,aAXlB,mBAWpCA,EAXoC,KAWvBC,EAXuB,OAYXP,mBAASD,EAAcS,UAZZ,mBAYpCA,EAZoC,KAY1BC,EAZ0B,KAcrCC,EAAc,SAACxG,GAClB,OAAO,SAACiB,GACLjB,EAASiB,EAAMC,OAAO7B,SA+B5B,OACG,cAACrB,EAAA,EAAD,CAAKC,UAAU,OAAOgF,SAjBR,SAAChC,GACfA,EAAMkC,iBACN,IAAMsD,EAZC,6BACDZ,GADN,IAEG7I,MAAOA,EACPgJ,OAAQA,EACRE,OAAQA,EACRE,YAAaA,EACbE,SAAUA,IAOPI,EAAajB,EAAQlF,QAE3BoD,EAAmB,uBAAD,OACQ8C,EAAUE,KACjCvD,KAAKC,UAAU,CAAEuD,OAAQH,IACzB,SACDrH,MAAK,SAACC,GACLqH,EAAWf,GAAetG,EAC1BqG,EAAWgB,GACXd,GAAQ,OAKX,SACG,eAACN,EAAA,EAAD,CAAMuB,WAAS,EAACC,UAAU,SAASC,QAAS,EAA5C,UACG,cAAC,GAAD,CACGrF,UAAU,QACVrC,MAAOrC,EACP4E,SAAU4E,EAAYT,KAEzB,cAAC,GAAD,CACGrE,UAAU,SACVrC,MAAO2G,EACPpE,SAAU4E,EAAYP,KAEzB,cAAC,GAAD,CACGvE,UAAU,SACVrC,MAAO6G,EACPtE,SAAU4E,EAAYL,KAEzB,cAAC,GAAD,CACGzE,UAAU,YACVrC,MAAOiH,EACP1E,SAAU4E,EAAYD,KAEzB,cAAC,GAAD,CACG7E,UAAU,cACVrC,MAAO+G,EACPxE,SAAU4E,EAAYH,KAEzB,cAAC9C,EAAA,EAAD,CAAQvH,MAAM,YAAYmC,QAAQ,YAAYwD,KAAK,SAAnD,kCC3DGqF,GArBwB,WAAM,MAGlBxE,YAAeuB,GAHG,mBAGnCkD,EAHmC,KAG7BrB,EAH6B,KAIpCd,EAAQhH,YAAemG,GAI7B,OACG,eAAC,IAAD,CACGgD,KAAMA,EACNC,sBAAoB,EACpBC,QANa,kBAAMvB,GAAQ,IAO3BwB,SAAS,gBAJZ,UAMG,cAAC,EAAD,KACEtC,GAAS,cAAC,GAAD,QClBLuC,GALU7L,YAAK,CAC3BC,IAAK,mBACLC,SAAU,ICMPqB,GAAYlB,YAAW,CAC1ByL,YAAa,CACVpK,OAAQ,QACRE,MAAO,SA0DEmK,GAtDkC,SAAC9F,GAAqB,IAC5DI,EAAgBJ,EAAhBI,KAAM2F,EAAU/F,EAAV+F,MADqD,EAErC1B,mBAASjE,GAF4B,mBAE5D4F,EAF4D,KAEnDC,EAFmD,KAG7DC,EAAWC,iBAAyB,MAHyB,EAKrCpF,YAAesB,GALsB,mBAK5D2B,EAL4D,KAKnDC,EALmD,KAM7DmC,EAAqB/J,YAAeoH,IACpC4C,EAAiBrL,YAAkB4K,IAEnCtJ,EAAUhB,KA+BhB,OAJA+C,qBAAU,WAAO,IAAD,EACb,UAAA6H,EAASI,eAAT,SAAkBC,UAClB,IAGA,cAAC1C,EAAA,EAAD,CAAMF,MAAI,EAAV,SACG,cAACtD,EAAA,EAAD,CACGH,KAAK,OACLtC,MAAOoI,EACP7F,SAlCY,SAACX,GACnByG,EAAWzG,EAAMC,OAAO7B,QAkClB4I,OA/BU,WAChB,IAAMvB,EAAajB,EAAQlF,QACrBqG,EAASF,EAAWmB,GACpBK,EAActB,EAAOuB,SAAS5H,QACpC2H,EAAYV,GAASC,EACrB,IAAMhB,EAAS,6BACTG,GADS,IAEZuB,SAAUD,IAEbvE,EAAmB,sBAAD,OACOiD,EAAOD,KAC7BvD,KAAKC,UAAU,CAAEuD,OAAQH,IACzB,SACDrH,MAAK,SAACC,GACLI,QAAQ2I,IAAI/I,GACZqH,EAAWmB,GAAsBxI,EACjCqG,EAAWgB,GACXoB,GAAgB,OAebhL,UAAWiB,EAAQuJ,YACnBK,SAAUA,O,UCvDhB5K,GAAYlB,YAAW,CAC1BwM,OAAQ,CACL,UAAW,CACRC,OAAQ,YAGdC,OAAQ,CACLvM,MAAO,SAoDEwM,GAhD0C,SACtD/G,GACG,IACK+F,EAAU/F,EAAV+F,MADN,EAG4BhF,YAAesB,GAH3C,mBAGK2B,EAHL,KAGcC,EAHd,KAIIG,EAAgB/H,YAAeoH,IAJnC,EAMoCY,mBAAS,GAN7C,mBAMK2C,EANL,KAMkBC,EANlB,KAQI9B,EAASnB,EAAQI,GAEjB9H,EAAUhB,KA4BhB,OACG,cAAC4L,GAAA,EAAD,CACG7L,UAAS,UAAKiB,EAAQsK,OAAb,YAAuC,IAAhBI,GAAqB1K,EAAQwK,QAC7D1L,QAZc,WACG,IAAhB4L,EAlBc,WAClB,IAAM/B,EAAajB,EAAQlF,QACrB2H,EAActB,EAAOuB,SAAS5H,QACpC2H,EAAYU,OAAOpB,EAAO,GAC1B,IAAMf,EAAS,6BAAQG,GAAR,IAAgBuB,SAAUD,IACzCvE,EAAmB,sBAAD,OACOiD,EAAOD,KAC7BvD,KAAKC,UAAU,CAAEuD,OAAQH,IACzB,SACDrH,MAAK,SAACC,GACLI,QAAQ2I,IAAI/I,GACZqH,EAAWb,GAAiBxG,EAC5BqG,EAAWgB,GACXgC,EAAe,MAMfG,IAEAH,EAAeD,EAAc,GAC7BK,YAAW,kBAAMJ,EAAe,KAAI,UClDvC3L,GAAYlB,YAAW,CAC1B4L,QAAS,CACN,MAAS,MACT,OAAU,cACV,aAAgB,kBAChB,OAAU,GACV,QAAW,eACX,UAAW,CACRa,OAAQ,SAGdS,IAAK,CACFC,UAAW,GACX1L,QAAS,EACTJ,OAAQ,KA0BC+L,GAtB8B,SAACxH,GAAqB,IACxDI,EAAgBJ,EAAhBI,KAAM2F,EAAU/F,EAAV+F,MACRM,EAAiBrL,YAAkB4K,IAEnCtJ,EAAUhB,KAMhB,OACG,cAACuI,EAAA,EAAD,CAAMF,MAAI,EAAV,SACG,eAACpH,EAAA,EAAD,CAAKlB,UAAWiB,EAAQgL,IAAxB,UACG,cAAC7K,EAAA,EAAD,CAAYrB,QAPD,WACjBiL,EAAeN,IAMyB1K,UAAWiB,EAAQ0J,QAArD,SACI5F,IAEJ,cAAC,GAAD,CAAe2F,MAAOA,UClCnB0B,GALa1N,YAAK,CAC9BC,IAAK,sBACLC,SAAS,I,UCKNqB,GAAYlB,YAAW,CAC1BgL,UAAW,CACR3J,OAAQ,QACRK,QAAS,OACT4L,eAAgB,YA2CPC,GAvCuB,WAAO,IAAD,EACX5G,YAAesB,GADJ,mBAClC2B,EADkC,KACzBC,EADyB,KAEnCmC,EAAqB/J,YAAeoH,IACpCmE,EAAkB5M,YAAkByM,IAEpCnL,EAAUhB,KAsBhB,OACG,eAACuM,GAAA,EAAD,CAAWxM,UAAWiB,EAAQ8I,UAA9B,UACG,cAACtD,EAAA,EAAD,CAAQpF,QAAQ,YAAYnC,MAAM,YAAYa,QAtBhC,WACjB,IAAM6J,EAAajB,EAAQlF,QACrBqG,EAASF,EAAWmB,GACpBK,EAActB,EAAOuB,SAAS5H,QACpC2H,EAAYlD,KAAK,IACjB,IAAMyB,EAAS,6BACTG,GADS,IAEZuB,SAAUD,IAEbvE,EAAmB,sBAAD,OACOiD,EAAOD,KAC7BvD,KAAKC,UAAU,CAAEuD,OAAQH,IACzB,SACDrH,MAAK,SAACC,GACLI,QAAQ2I,IAAI/I,GACZqH,EAAWmB,GAAsBxI,EACjCqG,EAAWgB,OAMX,wBAGA,cAACnD,EAAA,EAAD,CAAQpF,QAAQ,YAAYtB,QAAS,kBAAMwM,GAAgB,IAA3D,uBCrCHtM,GAAYlB,YAAW,CAC1BgL,UAAW,CACR0C,WAAY,MAkDHC,GA9CqB,WAEjC,IAAMC,EAAO3L,YAAeuJ,IAFW,EAIpC7E,YAAe0G,IAJqB,mBAGhCQ,EAHgC,KAGhBL,EAHgB,OAMb7G,YAAe0C,IANF,mBAMhCsC,EANgC,KAMzBmC,EANyB,KAOjClE,EAAU3H,YAAegG,GAEzB/F,EAAUhB,KAEV6M,EAAiBnE,EAAQ+B,GAAOW,SAAS0B,KAC5C,SAACxK,EAAemI,GACb,OAAIA,IAAUiC,EACJ,cAAC,GAAD,CAAa5H,KAAMxC,EAAOmI,MAAOA,GAAYA,GAE7C,cAAC,GAAD,CAAS3F,KAAMxC,EAAOmI,MAAOA,GAAYA,MAWzD,OACG,eAAC,IAAD,CACGP,KAAMyC,EACNvC,QATa,WAChB1H,QAAQ2I,IAAI,QACZiB,GAAgB,GAChBM,GAAU,IAOPvC,SAAS,gBAHZ,UAKG,cAAC9B,EAAA,EAAD,CACGuB,WAAS,EACTC,UAAU,SACVC,QAAS,EACTjK,UAAWiB,EAAQ8I,UAJtB,SAMI+C,IAEJ,cAAC,GAAD,QCpDME,GALetO,YAAK,CAChCC,IAAK,wBACLC,SAAS,ICIGqO,GALkBvO,YAAK,CACnCC,IAAK,2BACLC,QAAS,eCENqB,GAAYlB,YAAW,CAC1BmO,OAAQ,CACL3M,gBAAiB,UACjBrB,MAAO,aAkDEiO,GA9CyB,WAAO,IAAD,EACKzH,YAC7CsH,IAFwC,mBACpCI,EADoC,KAClBC,EADkB,OAIW3H,YACnDuH,IALwC,mBAIpCK,EAJoC,KAIfC,EAJe,KAQrCtM,EAAUhB,KAEVuN,EAAa,WAChBH,GAAoB,GACpBE,GAAuB,gBAQ1B,OACG,eAAC,IAAD,CACGpD,KAAMiD,EACNhD,sBAAoB,EACpBC,QAASmD,EACTlD,SAAS,gBAJZ,wDAOG,cAAC7D,EAAA,EAAD,CAAQpF,QAAQ,YAAYtB,QAbZ,WACnBuN,IACAE,KAWuDtO,MAAM,YAA1D,qBAGA,cAACuH,EAAA,EAAD,CAEGpF,QAAQ,YAEPtB,QAASyN,EAETxN,UAAWiB,EAAQiM,OANvB,wB,oBCrCHjN,GAAYlB,YAAW,CAC1B0O,OAAQ,CACLjG,WAAY,EACZkG,UAAW,uBAEdnG,MAAO,CACJC,WAAY,GACZH,UAAW,QAEdsG,WAAY,CACTtO,SAAU,UAkDDuO,GA9CyB,WAAO,IAAD,EACflI,YAAeqB,GADA,mBACpC0G,EADoC,KAC5BI,EAD4B,OAEnB7E,oBAAS,GAFU,mBAEpCmB,EAFoC,KAE9BrB,EAF8B,KAGrC+B,EAAWC,iBAAyB,MAEpC7J,EAAUhB,KAUhB+C,qBAAU,WACH6H,EAASI,SAASJ,EAASI,QAAQC,WAO1C,OACG,mCACKf,EAOC,cAACnF,EAAA,EAAD,CACG2I,WAAY,CAAEG,MAAO,CAAEzO,SAAU,KACjCW,UAAWiB,EAAQsG,MACnBsD,SAAUA,EACVhG,KAAK,OACLtC,MAAOkL,EACP3I,SAnBS,SAACX,GACnB0J,EAAU1J,EAAMC,OAAO7B,QAmBd4I,OAhCO,WACD,KAAXsC,GAAe3E,GAAQ,MAkBrB,cAAC,KAAD,CACGzJ,SAAS,QACTU,QAjBQ,WACjB+I,GAAQ,IAiBC9I,UAAWiB,EAAQwM,YC3C5BxN,GAAYlB,YAAW,CAC1BgP,kBAAmB,CAChBlN,MAAO,QACPmN,iBAAkB,SAClBC,eAAgB,QAChBC,kBAAmB,OA4BVC,GAxBG,WACf,IAAMrF,EAAUnJ,YAAkBsH,GAC5BmH,EAAczO,YAAkBwH,GAChCkH,EAAmB1O,YAAkByI,IACrCP,EAASlI,YAAkBuH,GAE3BjG,EAAUhB,KAShB,OACG,cAACiB,EAAA,EAAD,CAAKC,UAAU,OAAOnB,UAAWiB,EAAQ8M,kBAAzC,SACG,cAACtH,EAAA,EAAD,CAAQpF,QAAQ,YAAYnC,MAAM,UAAUa,QATlC,WACbqO,GAAY,GACZC,GAAkB,GAClBvF,GAAQ,GACRjB,EAAO,KAKJ,2BC/BH5H,GAAYlB,YAAW,CAC1BuP,UAAW,CACRL,eAAgB,QAChBxN,QAAS,eACTpB,SAAU,UAaDkP,GATG,WACf,IAAMtN,EAAUhB,KAChB,OACG,cAACmB,EAAA,EAAD,CAAYC,QAAQ,KAAKrB,UAAWiB,EAAQqN,UAA5C,yBCRArO,GAAYlB,YAAW,CAC1ByP,aAAc,CACX/N,QAAS,OACTC,cAAe,MACf+N,aAAc,qBAEjBC,wBAAyB,CACtBpO,MAAO,MACPE,QAAS,WACTJ,OAAQ,KAmBCuO,GAfM,WAClB,IAAM1N,EAAUhB,KAChB,OACG,eAACiB,EAAA,EAAD,CAAKC,UAAU,MAAMnB,UAAWiB,EAAQuN,aAAxC,UACG,eAACtN,EAAA,EAAD,CAAKC,UAAU,OAAOnB,UAAWiB,EAAQyN,wBAAzC,UACG,cAAC,GAAD,IACA,cAAC,GAAD,OAEH,cAACxN,EAAA,EAAD,CAAKC,UAAU,OAAOnB,UAAWiB,EAAQyN,wBAAzC,SACG,cAAC,GAAD,U,wCCvBNzO,GAAYlB,YAAW,CAC1B6P,aAAc,CACX,UAAW,CACRpD,OAAQ,cAkBFqD,GAbyC,SAAClK,GAAsB,IACpEzC,EAAQyC,EAARzC,IAEFjB,EAAUhB,KAOhB,OAAO,cAAC,KAAD,CAAeD,UAAWiB,EAAQ2N,aAAc7O,QAL1C,WACV,IAAM+O,EAAMC,OAAO5E,KAAKjI,EAAK,UAC1B,OAAH4M,QAAG,IAAHA,KAAK5D,Y,UCTLjL,GAAYlB,YAAW,CAC1B4N,KAAM,CACH,UAAW,CACRnB,OAAQ,cA2BFwD,GAtBiD,SAC7DrK,GAEA,IAAM1D,EAAUhB,KACRyK,EAAU/F,EAAV+F,MAEF0D,EAAczO,YAAkBwH,GAChCkH,EAAmB1O,YAAkByI,IACrCU,EAAUnJ,YAAkBsH,GAC5BY,EAASlI,YAAkBuH,GAC3ByB,EAAU3H,YAAegG,GAS/B,OAAO,cAACiI,GAAA,EAAD,CAAMlP,QAPG,WACbqO,GAAY,GACZC,EAAiB3D,GACjB5B,GAAQ,GACRjB,EAAOc,EAAQ+B,GAAOxI,MAGMlC,UAAWiB,EAAQ0L,Q,oBC3B/C1M,GAAYlB,YAAW,CAC1BmQ,MAAO,CACJ,UAAW,CACR1D,OAAQ,cAuCF2D,GAlC+C,SAC3DxK,GACG,IAAD,EAC4Be,YAAesB,GAD3C,mBACK2B,EADL,KACcC,EADd,KAEIyE,EAAsB1N,YAAkBqN,IACxCoC,EAA8BzP,YACjCsN,IAEKvC,EAAc/F,EAAd+F,MAAOlE,EAAO7B,EAAP6B,GAETvF,EAAUhB,KAEVoP,EAAgB,WACnB,OAAO,WACJ,IAAMzF,EAAajB,EAAQlF,QAC3BoD,EAAmB,uBAAD,OAAwBL,QAAM7C,EAAW,UACvDrB,MAAK,SAACC,GACJqH,EAAWkC,OAAOpB,EAAO,GACzB9B,EAAWgB,MAEb0F,OAAM,SAAC5M,GACLC,QAAQC,MAAMF,QAU1B,OAAO,cAAC,KAAD,CAAgB3C,QALH,WACjBqP,EAA4BC,GAC5BhC,GAAoB,IAGsBrN,UAAWiB,EAAQiO,S,oBC1C7DjP,GAAYlB,YAAW,CAC1BwQ,KAAM,CACH,UAAW,CACR/D,OAAQ,cAsBFgE,GAjBkD,SAC9D7K,GACG,IACK+F,EAAU/F,EAAV+F,MACF6B,EAAkB5M,YAAkByM,IACpCiC,EAAmB1O,YAAkByI,IAErCnH,EAAUhB,KAOhB,OAAO,cAAC,KAAD,CAAUF,QALD,WACbwM,GAAgB,GAChB8B,EAAiB3D,IAGe1K,UAAWiB,EAAQsO,QCR1CE,GAfuD,SACnE9K,GACG,IACKzC,EAAmByC,EAAnBzC,IAAKwI,EAAc/F,EAAd+F,MAAOlE,EAAO7B,EAAP6B,GAEpB,OACG,qCACG,cAAC,GAAD,CAAmBtE,IAAKA,IACxB,cAAC,GAAD,CAAgBwI,MAAOA,IACvB,cAAC,GAAD,CAAWxI,IAAKA,EAAKwI,MAAOA,EAAOlE,GAAIA,IACvC,cAAC,GAAD,CAAiBkE,MAAOA,QCNlBgF,GAP+D,SAC3E/K,GACG,IACK2E,EAAgB3E,EAAhB2E,YACR,OAAO,cAAClI,EAAA,EAAD,UAAakI,KCJjBrJ,GAAYlB,YAAW,CAC1BmB,MAAO,CACJb,SAAU,OACVoP,aAAc,uBAgBLkB,GAZmD,SAC/DhL,GAEA,IAAM1D,EAAUhB,KACRC,EAAUyE,EAAVzE,MACR,OACG,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKrB,UAAWiB,EAAQf,MAA5C,SACIA,KCGK0P,GAd6C,SACzDjL,GACG,IACKkL,EAAoBlL,EAApBkL,SAAUnF,EAAU/F,EAAV+F,MACVxK,EAAiC2P,EAAjC3P,MAAOoJ,EAA0BuG,EAA1BvG,YAAapH,EAAa2N,EAAb3N,IAAK2H,EAAQgG,EAARhG,IACjC,OACG,eAAC3I,EAAA,EAAD,CAAKC,UAAU,OAAf,UACG,cAAC,GAAD,CAAiBjB,MAAOA,IACxB,cAAC,GAAD,CAAmBgC,IAAKA,EAAKsE,GAAIqD,EAAKa,MAAOA,IAC7C,cAAC,GAAD,CAAuBpB,YAAaA,QCXvCrJ,GAAYlB,YAAW,CAC1B+Q,KAAM,CACHC,SAAU,IACVC,SAAU,IACV5P,OAAQ,IAEXnB,QAAS,CACN8Q,SAAU,IACVC,SAAU,IACVxP,QAAS,IAEZyP,MAAO,CACJD,SAAU,IACVvL,aAAc,GAEjByL,eAAgB,CACb1P,QAAS,KA2BA2P,GAvByC,SACrDxL,GAEA,IAAM1D,EAAUhB,KAER4P,EAAoBlL,EAApBkL,SAAUnF,EAAU/F,EAAV+F,MACVxK,EAAoB2P,EAApB3P,MAAOsJ,EAAaqG,EAAbrG,SACf,OACG,eAAC4G,GAAA,EAAD,CAAMC,QAAM,EAACrQ,UAAWiB,EAAQ6O,KAAhC,UACG,cAACQ,GAAA,EAAD,CAAanP,UAAU,MAAMnB,UAAWiB,EAAQiP,eAAhD,SACG,qBACGK,IAAK/G,EACLgH,IAAG,UAAKtQ,GACRF,UAAWiB,EAAQgP,UAGzB,cAACK,GAAA,EAAD,CAAatQ,UAAWiB,EAAQhC,QAASkC,UAAU,MAAnD,SACG,cAAC,GAAD,CAAgB0O,SAAUA,EAAUnF,MAAOA,UC+BxC+F,GAxDsB,WAAO,IAAD,EACJ/K,YAAesB,GADX,mBACjCc,EADiC,KACrBC,EADqB,KAElC2I,EAAS1P,YAAenC,GACxB4O,EAASzM,YAAe+F,GACxB4J,EAAY3P,YAAeiG,GAC3BmG,EAAmBpM,YAAegM,IAClCJ,EAAiB5L,YAAeoL,IAEhCwE,EAAmBC,uBAAY,WAClC,IAAMC,EAAcrD,EAAOjK,cACrBuN,EAAe,SAACC,GACnB,OAAOA,EAAIxN,cAAcyN,SAASH,IAErC,OAAOhJ,EAAWoJ,QAAO,SAACpH,GACvB,OACGiH,EAAajH,EAAO5J,QACpB6Q,EAAajH,EAAOZ,SACpB6H,EAAajH,EAAOR,cACpByH,EAAajH,EAAOV,SACpB2H,EAAajH,EAAO5H,MACpB4H,EAAOuB,SAAStH,MAAK,SAAC4G,GAAD,OAAaoG,EAAapG,WAGrD,CAAC8C,EAAQ3F,IAeZ,OAbA9E,qBAAU,WACP6D,EAAmB,wBAAD,OACS6J,QACxB/M,EACA,OACDrB,MAAK,SAACC,GACDA,GAA4B,kBAAVA,GAAqBwF,EAAcxF,QAE5D,CAACmO,EAAQ3I,IAMT,qCACG,cAAC,GAAD,IACA,eAACS,EAAA,EAAD,CAAMuB,WAAS,EAACE,QAAS,EAAzB,UACI0G,GAAa,cAAC,GAAD,IACbvD,GAAoB,cAAC,GAAD,IACpBR,GAAkB,cAAC,GAAD,IAClB9E,GACE8I,IAAmB7D,KAAI,SAAC5H,EAAmBuF,GAApB,OACpB,cAAClC,EAAA,EAAD,CAAMF,MAAI,EAAV,SACG,cAAC,GAAD,CAAYuH,SAAU1K,EAAMuF,MAAOA,KADtBvF,EAAK0E,eC5BxBsH,GA1BO,SAACxM,GAAuB,IAAD,EAChBe,YAAejH,GADC,mBACnCsC,EADmC,KAC5BrB,EAD4B,KAEpC0R,EAAiBzR,YAAkBd,GAqBzC,OAnBAmE,qBAAU,WACU6D,EACd,cACAP,KAAKC,UAAU,IACf,QAEMjE,MAAK,SAACC,GACS,kBAAVA,EACR7C,GAAS,GACD6C,IACR7C,GAAS,GACTwF,EAAS3C,EAAM6C,OACfgM,EAAe7O,EAAMiE,UAK3B,CAACzF,EAAOrB,EAAU0R,IAEd,mCAAGrQ,EAAQ,cAAC,GAAD,IAAgB,cAAC,EAAD,OCd/Bd,GAAYlB,YAAW,CAC1BsS,IAAK,CACFC,OAAQ,QACR9Q,QAAS,GAEZvB,QAAS,CACNqS,OAAQ,OACRjK,UAAW,UA2CFgK,GAvCgB,WAC7B,IAAME,EAAQC,YAAe,CAC1BC,QAAS,CACNC,QAAS,CACNC,KAAM,UACNC,aAAc,QAEjBC,UAAW,CACRF,KAAM,UACNC,aAAc,SAGpBE,WAAY,CACTC,WAAY,CAAC,cAAe,SAAU,SAASC,KAAK,QAIpD/Q,EAAUhB,KAEhB,OACG,cAAC,IAAD,UACG,cAAC,IAAD,UACG,cAACgS,EAAA,EAAD,CAAeV,MAAOA,EAAtB,SACG,sBAAKvR,UAAWiB,EAAQoQ,IAAxB,UACG,cAAC,EAAD,IACA,qBAAKrR,UAAWiB,EAAQhC,QAAxB,SACG,eAAC,IAAD,WACG,cAAC,IAAD,CAAOqC,KAAK,IAAIC,OAAK,EAACJ,UAAWgQ,KACjC,cAAC,IAAD,CAAO7P,KAAK,UAAUC,OAAK,EAACJ,UAAWsE,IACvC,cAAC,IAAD,CAAOnE,KAAK,UAAUC,OAAK,EAACJ,UAAWuF,mBC7C/CwL,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB9P,MAAK,YAAkD,IAA/C+P,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAO1BZ,GAAgBvP,QAAQ2I,M","file":"static/js/main.45e00c66.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nconst loginState = atom({\r\n   key: \"loginState\",\r\n   default: false,\r\n});\r\n\r\nexport default loginState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst userIdState = atom({\r\n   key: \"userIdState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default userIdState;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useCommonStyles = makeStyles({\r\n   headerLink: {\r\n      \"&:hover\": {\r\n         content: '\"\"',\r\n         color: \"black\",\r\n         transitionDuration: \".5s\",\r\n      },\r\n      \"textDecoration\": \"none\",\r\n      \"color\": \"white\",\r\n      \"margin\": \"auto 0px\",\r\n   },\r\n   signInOut: {\r\n      fontSize: \"2rem\",\r\n   },\r\n});\r\n\r\nexport default useCommonStyles;\r\n","const deleteToken = () => {\r\n   localStorage.removeItem(\"token\");\r\n};\r\n\r\nexport default deleteToken;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport userIdState from \"../recoil/UserId\";\r\nimport useCommonStyles from \"./styles\";\r\nimport deleteToken from \"./utils/deletetoken\";\r\n\r\nconst SignOut = () => {\r\n   const setLogin = useSetRecoilState(loginState);\r\n   const setUserId = useSetRecoilState(userIdState);\r\n   const commonClasses = useCommonStyles();\r\n\r\n   const onClick = () => {\r\n      setLogin(false);\r\n      setUserId(\"\");\r\n      deleteToken();\r\n   };\r\n\r\n   return (\r\n      <Link\r\n         to=\"/\"\r\n         onClick={onClick}\r\n         className={commonClasses.signInOut + \" \" + commonClasses.headerLink}\r\n      >\r\n         Sign out\r\n      </Link>\r\n   );\r\n};\r\n\r\nexport default SignOut;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport SignOut from './SignOut';\r\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport useCommonStyles from \"./styles\";\r\n\r\nconst useStyles = makeStyles({\r\n   title: {\r\n      fontSize: \"3rem\",\r\n      left: 0,\r\n      margin: 0,\r\n   },\r\n   header: {\r\n      width: \"100%\",\r\n      margin: 0,\r\n      backgroundColor: \"#01A299\",\r\n      color: \"white\",\r\n      padding: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n   },\r\n   headerItemWrapper: {\r\n      width: \"50%\",\r\n      padding: \"10px\",\r\n  },\r\n  headerRightSide: {\r\n      float: \"right\",\r\n      margin: 0\r\n   }\r\n  \r\n}); \r\n  \r\n\r\n/**\r\n * Header Function Component\r\n * App name, whatever\r\n */\r\nconst Header: FunctionComponent = () => {\r\n    const login = useRecoilValue(loginState);\r\n    const classes = useStyles();\r\n    const commonClasses = useCommonStyles();\r\n\r\n    return (\r\n       <Box component=\"div\" className={classes.header}>\r\n          <Box component=\"span\" className={classes.headerItemWrapper}>\r\n             <Typography variant=\"h1\" className={classes.title}>\r\n                <Link to=\"/\" className={commonClasses.headerLink}>\r\n                   Recipe Box\r\n                </Link>\r\n             </Typography>\r\n          </Box>\r\n          <Box component=\"span\" className={classes.headerItemWrapper}>\r\n             <Typography variant=\"h3\" className={classes.headerRightSide}>\r\n                <Switch>\r\n                   {!login ? (\r\n                      <Route path=\"/\" exact>\r\n                         <Link to={\"/signup\"} className={commonClasses.headerLink + \" \" + commonClasses.signInOut}>\r\n                            Sign Up\r\n                         </Link>\r\n                      </Route>\r\n                   ) : (\r\n                      <SignOut />\r\n                   )}\r\n                </Switch>\r\n             </Typography>\r\n          </Box>\r\n       </Box>\r\n    );\r\n}\r\n\r\nexport default Header;","import { atom } from \"recoil\";\r\n\r\nconst emailState = atom({\r\n   key: \"emailState\", // unique ID (with respect to other atoms/selectors)\r\n   default: \"\", // default value (aka initial value)\r\n});\r\n\r\nexport default emailState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst firstNameState = atom({\r\n   key: \"firstNameState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default firstNameState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst lastNameState = atom({\r\n   key: \"lastNameState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default lastNameState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst passwordState = atom({\r\n   key: \"passwordState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default passwordState;\r\n","const generalFetch = (\r\n   urlPath: string,\r\n   body: BodyInit | undefined,\r\n   headers: HeadersInit | undefined,\r\n   method: string\r\n) => {\r\n   if (!headers) {\r\n      headers = {\r\n         \"Content-type\": \"application/json; charset=UTF-8\",\r\n      };\r\n   }\r\n   // switch this to env at some point\r\n   const env = process.env.NODE_ENV || \"development\";\r\n   let host = \"https://recipeboxapp.azurewebsites.net\";\r\n   if (env === \"development\") host = \"http://localhost:8080\";\r\n   const url = new URL(urlPath, host).href;\r\n   const options = body\r\n      ? {\r\n           method: method,\r\n           headers: headers,\r\n           body: body,\r\n        }\r\n      : {\r\n           method: method,\r\n           headers: headers,\r\n        };\r\n   const request = fetch(url, options);\r\n   return request.then(\r\n      (value) => {\r\n         if (value.status >= 200 && value.status <= 300) {\r\n            return value.json();\r\n         } else {\r\n            return value.status;\r\n         }\r\n      },\r\n      (err) => {\r\n         console.error(err);\r\n      }\r\n   );\r\n};;\r\n\r\nexport default generalFetch;\r\n","import { useEffect } from \"react\";\r\nimport { SetterOrUpdater } from \"recoil\";\r\n\r\n/**\r\n * Currently sets all states to a given default value\r\n * Should probably be renamed to something more appropriate\r\n * @param setStates setters\r\n * @param defaultValue value to set state to\r\n */\r\nfunction useCleanup<T>(setStates: SetterOrUpdater<T>[], defaultValue: T) {\r\n   useEffect(() => \r\n      setStates.forEach((setState) => {\r\n         setState(defaultValue);\r\n      })\r\n      // run once per component\r\n      // eslint-disable-next-line\r\n   , []);\r\n}\r\n\r\nexport default useCleanup;\r\n","import { RecoilState } from \"recoil\";\r\nimport * as state from \"../index\";\r\n\r\nconst getByName = (name: string): RecoilState<any> => {\r\n   name = name.replace(\" \", \"\");\r\n   const nameState = name.charAt(0).toLowerCase() + name.slice(1) + \"State\";\r\n   var result: RecoilState<any> | undefined = undefined;\r\n   Object.values(state).some((val: RecoilState<any>) => {\r\n      if (val.key === nameState) {\r\n         result = val;\r\n         return true;\r\n      }\r\n      return false;\r\n   });\r\n   const returnValue = (result as unknown) as RecoilState<any>;\r\n   return returnValue;\r\n};\r\n\r\nexport default getByName;\r\n","import { RecoilState, useSetRecoilState } from \"recoil\";\r\nimport getByName from \"../recoil/utils/getByName\";\r\n\r\nfunction useChangeState(name: string) {\r\n   const stateAtom: RecoilState<any> | undefined = getByName(name);\r\n   const setState = useSetRecoilState(stateAtom);\r\n   return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState(event.target.value);\r\n   };\r\n}\r\n\r\nexport default useChangeState;\r\n","import { RecoilState, useRecoilValue } from \"recoil\";\r\nimport getByName from \"../recoil/utils/getByName\";\r\n\r\nfunction useStateValue(name: string) {\r\n   const stateAtom: RecoilState<any> | undefined = getByName(name);\r\n   const stateValue = useRecoilValue(stateAtom);\r\n   return stateValue;\r\n}\r\n\r\nexport default useStateValue;\r\n","import { Box, makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport useChangeState from \"../hooks/UseChangeState\";\r\nimport useStateValue from \"../hooks/UseStateValue\";\r\nimport ITextProps from \"./types/TextProps\";\r\n\r\nconst useStyles = makeStyles({\r\n   enterText: {\r\n      margin: \"5px auto\",\r\n      textAlign: \"center\",\r\n      fontSize: \"20px\",\r\n   },\r\n   enterTextInput: {\r\n      borderRadius: \"5px\",\r\n      color: \"black\",\r\n      fontSize: \"20px\",\r\n      width: \"90%\",\r\n   },\r\n});\r\n\r\n/**\r\n * General Text Input\r\n */\r\nconst EnterText: FunctionComponent<ITextProps> = (props: ITextProps) => {\r\n   const { fieldName, type } = props;\r\n   const classes = useStyles();\r\n\r\n   const onChange = useChangeState(fieldName);\r\n   const text = useStateValue(fieldName);\r\n\r\n   return (\r\n      <Box component='div' className={classes.enterText}>\r\n         <Box component='div'>{fieldName}:</Box>\r\n         <TextField\r\n            type={type}\r\n            placeholder={fieldName}\r\n            value={text}\r\n            className={classes.enterTextInput}\r\n            name={fieldName}\r\n            onChange={onChange}\r\n         />\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default EnterText;\r\n","import Token from \"../types/Token\";\r\n\r\nconst setToken = (data: Token) => {\r\n   if (data && data.token) localStorage.setItem(\"token\", data.token);\r\n};\r\n\r\nexport default setToken;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useCommonStyles = makeStyles({\r\n   signUpBox: {\r\n      margin: \"auto\",\r\n      border: \"1px solid #707070\",\r\n      borderRadius: \"5px\",\r\n      padding: \"10px\",\r\n      display: \"block\",\r\n      width: \"20%\",\r\n   },\r\n   signUpButton: {\r\n      margin: \"5px auto\",\r\n      textAlign: \"center\",\r\n   },\r\n});\r\n\r\nexport default useCommonStyles;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Signup.css\";\r\nimport {\r\n   emailState,\r\n   firstNameState,\r\n   lastNameState,\r\n   passwordState,\r\n} from \"../recoil\";\r\n\r\nimport generalFetch from \"./fetch/generalfetch\";\r\nimport useCleanup from \"../hooks/Cleanup\";\r\nimport EnterText from \"./EnterText\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport setToken from \"./utils/settoken\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useCommonStyles from \"./styles\";\r\nimport userIdState from \"../recoil/UserId\";\r\n\r\n/**\r\n * Sign Up Page\r\n */\r\nconst SignUp: FunctionComponent = () => {\r\n   const [firstName, setFirstName] = useRecoilState(firstNameState);\r\n   const [lastName, setLastName] = useRecoilState(lastNameState);\r\n   const [password, setPassword] = useRecoilState(passwordState);\r\n   const [email, setEmail] = useRecoilState(emailState);\r\n   const [login, setLogin] = useRecoilState(loginState);\r\n   const setUserId = useSetRecoilState(userIdState);\r\n\r\n   const classes = useCommonStyles();\r\n\r\n   useCleanup<string>([setFirstName, setLastName, setPassword, setEmail], \"\");\r\n\r\n   const onSubmit = (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      const response = generalFetch(\r\n         \"users/signup\",\r\n         JSON.stringify({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            password: password,\r\n         }),\r\n         {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n         },\r\n         \"POST\"\r\n      );\r\n      response.then((value) => {\r\n         if (typeof value === \"number\") {\r\n            // do nothing\r\n         } else if (value) {\r\n            setLogin(true);\r\n            setUserId(value.id);\r\n            setToken(value.token);\r\n            return <Redirect to=\"/\" />;\r\n         }\r\n      });\r\n   };\r\n\r\n   return !login ? (\r\n      <Box component=\"form\" className={classes.signUpBox} onSubmit={onSubmit}>\r\n         <EnterText fieldName={\"First Name\"} type=\"text\" />\r\n         <EnterText fieldName={\"Last Name\"} type=\"text\" />\r\n         <EnterText fieldName={\"Email\"} type=\"email\" />\r\n         <EnterText fieldName={\"Password\"} type=\"password\" />\r\n         <Box component=\"div\" className={classes.signUpButton}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n               Sign Up\r\n            </Button>\r\n         </Box>\r\n      </Box>\r\n   ) : (\r\n      <Redirect to=\"/\" />\r\n   );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Signup.css\";\r\nimport { emailState, passwordState } from \"../recoil\";\r\nimport useCleanup from \"../hooks/Cleanup\";\r\nimport generalFetch from \"./fetch/generalfetch\";\r\nimport setToken from \"./utils/settoken\";\r\nimport EnterText from \"./EnterText\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useCommonStyles from \"./styles\";\r\nimport userIdState from \"../recoil/UserId\";\r\n\r\n/**\r\n * Sign In Page\r\n */\r\nconst SignIn: FunctionComponent = () => {\r\n   const [password, setPassword] = useRecoilState(passwordState);\r\n   const [email, setEmail] = useRecoilState(emailState);\r\n   const [login, setLogin] = useRecoilState(loginState);\r\n   const setUserId = useSetRecoilState(userIdState);\r\n\r\n   const classes = useCommonStyles();\r\n\r\n   useCleanup<string>([setPassword, setEmail], \"\");\r\n\r\n   const onClick = (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      const response = generalFetch(\r\n         \"auth/signin\",\r\n         JSON.stringify({\r\n            email: email,\r\n            password: password,\r\n         }),\r\n         {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n         },\r\n         \"POST\"\r\n      );\r\n      response.then((value) => {\r\n         if (typeof value === \"number\") {\r\n            // do nothing\r\n         } else if (value) {\r\n            setLogin(true);\r\n            setUserId(value.id);\r\n            setToken(value);\r\n            return <Redirect to=\"/\" />;\r\n         }\r\n      });\r\n   };\r\n\r\n   return !login ? (\r\n      <Box component=\"form\" className={classes.signUpBox} onSubmit={onClick}>\r\n         <EnterText fieldName={\"Email\"} type=\"text\" />\r\n\r\n         <EnterText fieldName={\"Password\"} type=\"password\" />\r\n         <Box component=\"div\" className={classes.signUpButton}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n               Sign In\r\n            </Button>\r\n         </Box>\r\n      </Box>\r\n   ) : (\r\n      <Redirect to=\"/\" />\r\n   );\r\n};\r\n\r\nexport default SignIn;\r\n","import { Button, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n   signIn: {\r\n      \"&:hover\": {\r\n         content: '\"\"',\r\n         color: \"black\",\r\n         transitionDuration: \".5s\",\r\n      },\r\n      \"textDecoration\": \"none\",\r\n      \"color\": \"white\",\r\n      \"fontSize\": \"2rem\",\r\n   },\r\n});\r\n\r\nconst Home: FunctionComponent = () => {\r\n   const classes = useStyles();\r\n   return (\r\n      <>\r\n         <Typography variant='h1'>Home</Typography>\r\n\r\n         <Link to={\"/signin\"} className={classes.signIn}>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n               Sign In\r\n            </Button>\r\n         </Link>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","import generalFetch from \"./generalfetch\";\r\n\r\nconst authenticatedFetch = (\r\n   path: string,\r\n   body: BodyInit | undefined,\r\n   method: string\r\n) => {\r\n   const headers: HeadersInit = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authentication\": \"bearer \" + localStorage.getItem(\"token\"),\r\n   };\r\n   return generalFetch(path, body, headers, method);\r\n};\r\n\r\nexport default authenticatedFetch;\r\n","import { atom } from \"recoil\";\r\n\r\nconst searchState = atom({\r\n   key: \"searchState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default searchState;\r\n","import { atom } from \"recoil\";\r\nimport IRecipeData from \"../dashboard/types/RecipeData\";\r\n\r\nconst userRecipesState = atom({\r\n   key: \"userRecipesState\",\r\n   default: [] as IRecipeData[],\r\n});\r\n\r\nexport default userRecipesState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst popupState = atom({\r\n   key: \"popupState\",\r\n   default: false,\r\n});\r\n\r\nexport default popupState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst currentRecipeUrl = atom({\r\n   key: \"currentRecipeUrl\",\r\n   default: \"\",\r\n});\r\n\r\nexport default currentRecipeUrl;\r\n","import { atom } from \"recoil\";\r\n\r\nconst isAddState = atom({\r\n   key: \"isAddState\",\r\n   default: false,\r\n});\r\n\r\nexport default isAddState;\r\n","import { Box, Button, makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport authenticatedFetch from \"../../../account/fetch/authenticatedfetch\";\r\nimport userRecipesState from \"../../../recoil/UserRecipes\";\r\nimport currentRecipeUrl from \"../../recoil/CurrentRecipeUrl\";\r\nimport isAddState from \"../../recoil/IsAddState\";\r\nimport IRecipeData from \"../../types/RecipeData\";\r\n\r\nconst useStyles = makeStyles({\r\n   wrapper: {\r\n      width: \"100%\",\r\n      padding: \"0px\",\r\n      marginTop: \"1%\",\r\n      marginBottom: \"1%\"\r\n   },\r\n   input: {\r\n      width: \"75%\",\r\n      marginLeft: \"2%\",\r\n      marginRight: \"2%\",\r\n   },\r\n   button: {\r\n      float: \"right\",\r\n      marginRight: \"2%\",\r\n   },\r\n   fieldSet: {\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      border: \"none\"\r\n   }\r\n});\r\n\r\nconst UrlInput: FunctionComponent = () => {\r\n   const [url, setUrl] = useRecoilState(currentRecipeUrl);\r\n   const [recipeData, setRecipeData] = useRecoilState(userRecipesState);\r\n   const isAdd = useRecoilValue(isAddState);\r\n\r\n   const classes = useStyles();\r\n\r\n   const onClick = (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      authenticatedFetch(\r\n         \"content/recipes\",\r\n         JSON.stringify({ url }),\r\n         \"POST\"\r\n      ).then((value: IRecipeData) => {\r\n         const newRecipeData = recipeData.slice();\r\n         newRecipeData.push(value);\r\n         setRecipeData(newRecipeData);\r\n      });\r\n   };\r\n\r\n   const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setUrl(e.target.value);\r\n   };\r\n\r\n   return (\r\n      <Box component=\"form\" className={classes.wrapper} onSubmit={onClick}>\r\n      <fieldset className={classes.fieldSet} disabled={!isAdd}>\r\n         <TextField\r\n         type=\"text\"\r\n         value={url}\r\n         onChange={onChange}\r\n         placeholder=\"Recipe Url\"\r\n         className={classes.input}\r\n         />{isAdd && \r\n         <Button \r\n            className={classes.button} \r\n            variant=\"contained\" \r\n            color=\"secondary\" \r\n            type=\"submit\" >\r\n            Submit URL\r\n         </Button>}\r\n      </fieldset>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default UrlInput;\r\n","import { atom } from \"recoil\";\r\n\r\nconst currentRecipeIndexState = atom({\r\n   key: \"currentRecipeIndexState\",\r\n   default: -1,\r\n});\r\n\r\nexport default currentRecipeIndexState;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport IRecipeFieldInputProps from \"./types/RecipeFieldInputProps\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n   label: {\r\n      marginLeft: \"2%\",\r\n      marginRight: \"1%\",\r\n      marginTop: 10,\r\n      display: \"inline-block\",\r\n   },\r\n   item: {\r\n      margin: 0,\r\n   },\r\n   input: {},\r\n});\r\n\r\nconst RecipeFieldInput: FunctionComponent<IRecipeFieldInputProps> = (\r\n   props: IRecipeFieldInputProps\r\n) => {\r\n   const { onChange, value, fieldName } = props;\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Grid item className={classes.item}>\r\n         <FormLabel className={classes.label}>{fieldName}:</FormLabel>\r\n         <TextField\r\n            className={classes.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n         />\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default RecipeFieldInput;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Dispatch } from \"react\";\r\nimport { SetStateAction } from \"react\";\r\nimport currentRecipeIndexState from \"../../recoil/CurrentRecipeIndex\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport userRecipesState from \"../../../recoil/UserRecipes\";\r\nimport RecipeFieldInput from \"./RecipeFieldInput\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport authenticatedFetch from \"../../../account/fetch/authenticatedfetch\";\r\nimport IRecipeData from \"../../types/RecipeData\";\r\nimport popupState from \"../../recoil/Popup\";\r\n\r\nconst RecipeFields: FunctionComponent = () => {\r\n   const [recipes, setRecipes] = useRecoilState(userRecipesState);\r\n   const recipeIndex = useRecoilValue(currentRecipeIndexState);\r\n   const setOpen = useSetRecoilState(popupState);\r\n\r\n   const currentRecipe = recipes[recipeIndex];\r\n\r\n\r\n   const [title, setTitle] = useState(currentRecipe.title);\r\n   const [author, setAuthor] = useState(currentRecipe.author);\r\n   const [source, setSource] = useState(currentRecipe.source);\r\n   const [description, setDescription] = useState(currentRecipe.description);\r\n   const [imageUrl, setImageUrl] = useState(currentRecipe.imageUrl);\r\n\r\n   const getOnChange = (setState: Dispatch<SetStateAction<string>>) => {\r\n      return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n         setState(event.target.value);\r\n      };\r\n   };\r\n\r\n   const getNewRecipe = () => {\r\n      return {\r\n         ...currentRecipe,\r\n         title: title,\r\n         author: author,\r\n         source: source,\r\n         description: description,\r\n         imageUrl: imageUrl,\r\n      };\r\n   };\r\n\r\n   const onSubmit = (event: React.SyntheticEvent) => {\r\n      event.preventDefault();\r\n      const newRecipe = getNewRecipe();\r\n      const newRecipes = recipes.slice();\r\n      // deal with backend things...\r\n      authenticatedFetch(\r\n         `/content/recipes?id=${newRecipe._id}`,\r\n         JSON.stringify({ recipe: newRecipe }),\r\n         \"PATCH\"\r\n      ).then((value: IRecipeData) => {\r\n         newRecipes[recipeIndex] = value;\r\n         setRecipes(newRecipes);\r\n         setOpen(false);\r\n      });\r\n   };\r\n\r\n   return (\r\n      <Box component=\"form\" onSubmit={onSubmit}>\r\n         <Grid container direction=\"column\" spacing={0}>\r\n            <RecipeFieldInput\r\n               fieldName=\"Title\"\r\n               value={title}\r\n               onChange={getOnChange(setTitle)}\r\n            />\r\n            <RecipeFieldInput\r\n               fieldName=\"Author\"\r\n               value={author}\r\n               onChange={getOnChange(setAuthor)}\r\n            />\r\n            <RecipeFieldInput\r\n               fieldName=\"Source\"\r\n               value={source}\r\n               onChange={getOnChange(setSource)}\r\n            />\r\n            <RecipeFieldInput\r\n               fieldName=\"Image URL\"\r\n               value={imageUrl}\r\n               onChange={getOnChange(setImageUrl)}\r\n            />\r\n            <RecipeFieldInput\r\n               fieldName=\"Description\"\r\n               value={description}\r\n               onChange={getOnChange(setDescription)}\r\n            />\r\n            <Button color=\"secondary\" variant=\"contained\" type=\"submit\">\r\n               Submit Changes\r\n            </Button>\r\n         </Grid>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default RecipeFields;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport popupState from \"../../recoil/Popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport UrlInput from \"./UrlInput\";\r\nimport isAddState from \"../../recoil/IsAddState\";\r\nimport RecipeFields from \"./RecipeFields\";\r\n\r\nconst RecipePopup: FunctionComponent = () => {\r\n   // make state for url input in recoil\r\n   // make recoil state for open\r\n   const [open, setOpen] = useRecoilState(popupState);\r\n   const isAdd = useRecoilValue(isAddState);\r\n\r\n   const closeModal = () => setOpen(false);\r\n\r\n   return (\r\n      <Popup\r\n         open={open}\r\n         closeOnDocumentClick\r\n         onClose={closeModal}\r\n         position=\"center center\"\r\n      >\r\n         <UrlInput />\r\n         {!isAdd && <RecipeFields />}\r\n      </Popup>\r\n   );\r\n};\r\n\r\nexport default RecipePopup;\r\n","import { atom } from \"recoil\";\r\n\r\nconst editCommentState = atom({\r\n   key: \"editCommentState\",\r\n   default: -1,\r\n});\r\n\r\nexport default editCommentState;\r\n","import { Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport authenticatedFetch from \"../../../account/fetch/authenticatedfetch\";\r\nimport userRecipesState from \"../../../recoil/UserRecipes\";\r\nimport currentRecipeIndexState from \"../../recoil/CurrentRecipeIndex\";\r\nimport IRecipeData from \"../../types/RecipeData\";\r\nimport editCommentState from \"./recoil/EditCommentState\";\r\nimport IComment from \"./types/Comment\";\r\n\r\nconst useStyles = makeStyles({\r\n   editComment: {\r\n      margin: \"0% 5%\",\r\n      width: \"80%\",\r\n   },\r\n});\r\n\r\nconst EditComment: FunctionComponent<IComment> = (props: IComment) => {\r\n   const { text, index } = props;\r\n   const [comment, setComment] = useState(text);\r\n   const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n   const [recipes, setRecipes] = useRecoilState(userRecipesState);\r\n   const currentRecipeIndex = useRecoilValue(currentRecipeIndexState);\r\n   const setEditComment = useSetRecoilState(editCommentState);\r\n\r\n   const classes = useStyles();\r\n\r\n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setComment(event.target.value);\r\n   };\r\n\r\n   const handleBlur = () => {\r\n      const newRecipes = recipes.slice();\r\n      const recipe = newRecipes[currentRecipeIndex];\r\n      const newComments = recipe.comments.slice();\r\n      newComments[index] = comment;\r\n      const newRecipe = {\r\n         ...recipe,\r\n         comments: newComments,\r\n      };\r\n      authenticatedFetch(\r\n         `content/recipes?id=${recipe._id}`,\r\n         JSON.stringify({ recipe: newRecipe }),\r\n         \"PATCH\"\r\n      ).then((value: IRecipeData) => {\r\n         console.log(value);\r\n         newRecipes[currentRecipeIndex] = value;\r\n         setRecipes(newRecipes);\r\n         setEditComment(-1);\r\n      });\r\n   };\r\n\r\n   useEffect(() => {\r\n      inputRef.current?.focus();\r\n   }, []);\r\n\r\n   return (\r\n      <Grid item>\r\n         <TextField\r\n            type=\"text\"\r\n            value={comment}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={classes.editComment}\r\n            inputRef={inputRef}\r\n         ></TextField>\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default EditComment;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { DeleteOutlined } from \"@material-ui/icons\";\r\nimport { FunctionComponent, useState } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport authenticatedFetch from \"../../../account/fetch/authenticatedfetch\";\r\nimport userRecipesState from \"../../../recoil/UserRecipes\";\r\nimport currentRecipeIndexState from \"../../recoil/CurrentRecipeIndex\";\r\nimport IRecipeData from \"../../types/RecipeData\";\r\nimport IDeleteComment from \"./types/DeleteComment\";\r\n\r\nconst useStyles = makeStyles({\r\n   delete: {\r\n      \"&:hover\": {\r\n         cursor: \"pointer\",\r\n      },\r\n   },\r\n   active: {\r\n      color: \"red\",\r\n   },\r\n});\r\n\r\nconst DeleteComment: FunctionComponent<IDeleteComment> = (\r\n   props: IDeleteComment\r\n) => {\r\n   const { index } = props;\r\n\r\n   const [recipes, setRecipes] = useRecoilState(userRecipesState);\r\n   const currentRecipe = useRecoilValue(currentRecipeIndexState);\r\n\r\n   const [deleteCount, setDeleteCount] = useState(0);\r\n\r\n   const recipe = recipes[currentRecipe];\r\n\r\n   const classes = useStyles();\r\n\r\n   const handleDelete = () => {\r\n      const newRecipes = recipes.slice();\r\n      const newComments = recipe.comments.slice();\r\n      newComments.splice(index, 1);\r\n      const newRecipe = { ...recipe, comments: newComments };\r\n      authenticatedFetch(\r\n         `content/recipes?id=${recipe._id}`,\r\n         JSON.stringify({ recipe: newRecipe }),\r\n         \"PATCH\"\r\n      ).then((value: IRecipeData) => {\r\n         console.log(value);\r\n         newRecipes[currentRecipe] = value;\r\n         setRecipes(newRecipes);\r\n         setDeleteCount(0);\r\n      });\r\n   };\r\n\r\n   const handleClick = () => {\r\n      if (deleteCount === 1) {\r\n         handleDelete();\r\n      } else {\r\n         setDeleteCount(deleteCount + 1);\r\n         setTimeout(() => setDeleteCount(0), 1000);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <DeleteOutlined\r\n         className={`${classes.delete} ${deleteCount === 1 && classes.active}`}\r\n         onClick={handleClick}\r\n      />\r\n   );\r\n};\r\n\r\nexport default DeleteComment;\r\n","import { Box, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport editCommentState from \"./recoil/EditCommentState\";\r\nimport IComment from \"./types/Comment\";\r\nimport DeleteComment from \"./DeleteComment\";\r\n\r\nconst useStyles = makeStyles({\r\n   comment: {\r\n      \"width\": \"80%\",\r\n      \"margin\": \"0% 0% 0% 5%\",\r\n      \"borderBottom\": \"1px solid black\",\r\n      \"height\": 24,\r\n      \"display\": \"inline-block\",\r\n      \"&:hover\": {\r\n         cursor: \"text\",\r\n      },\r\n   },\r\n   box: {\r\n      maxHeight: 25,\r\n      padding: 0,\r\n      margin: 0,\r\n   },\r\n});\r\n\r\nconst Comment: FunctionComponent<IComment> = (props: IComment) => {\r\n   const { text, index } = props;\r\n   const setEditComment = useSetRecoilState(editCommentState);\r\n\r\n   const classes = useStyles();\r\n\r\n   const handleClick = () => {\r\n      setEditComment(index);\r\n   };\r\n\r\n   return (\r\n      <Grid item>\r\n         <Box className={classes.box}>\r\n            <Typography onClick={handleClick} className={classes.comment}>\r\n               {text}\r\n            </Typography>\r\n            <DeleteComment index={index} />\r\n         </Box>\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default Comment;\r\n","import { atom } from \"recoil\";\r\n\r\nconst isCommentsOpenState = atom({\r\n   key: \"isCommentsOpenState\",\r\n   default: false,\r\n});\r\n\r\nexport default isCommentsOpenState;\r\n","import { Button, Container, makeStyles } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport authenticatedFetch from \"../../../account/fetch/authenticatedfetch\";\r\nimport userRecipesState from \"../../../recoil/UserRecipes\";\r\nimport currentRecipeIndexState from \"../../recoil/CurrentRecipeIndex\";\r\nimport isCommentsOpenState from \"../../recoil/IsCommentsOpen\";\r\nimport IRecipeData from \"../../types/RecipeData\";\r\n\r\nconst useStyles = makeStyles({\r\n   container: {\r\n      margin: \"2% 0%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n   },\r\n});\r\n\r\nconst AddComment: FunctionComponent = () => {\r\n   const [recipes, setRecipes] = useRecoilState(userRecipesState);\r\n   const currentRecipeIndex = useRecoilValue(currentRecipeIndexState);\r\n   const setCommentsOpen = useSetRecoilState(isCommentsOpenState);\r\n\r\n   const classes = useStyles();\r\n\r\n   const handleClick = () => {\r\n      const newRecipes = recipes.slice();\r\n      const recipe = newRecipes[currentRecipeIndex];\r\n      const newComments = recipe.comments.slice();\r\n      newComments.push(\"\");\r\n      const newRecipe = {\r\n         ...recipe,\r\n         comments: newComments,\r\n      };\r\n      authenticatedFetch(\r\n         `content/recipes?id=${recipe._id}`,\r\n         JSON.stringify({ recipe: newRecipe }),\r\n         \"PATCH\"\r\n      ).then((value: IRecipeData) => {\r\n         console.log(value);\r\n         newRecipes[currentRecipeIndex] = value;\r\n         setRecipes(newRecipes);\r\n      });\r\n   };\r\n\r\n   return (\r\n      <Container className={classes.container}>\r\n         <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\r\n            Add a Note\r\n         </Button>\r\n         <Button variant=\"contained\" onClick={() => setCommentsOpen(false)}>\r\n            Close\r\n         </Button>\r\n      </Container>\r\n   );\r\n};\r\n\r\nexport default AddComment;\r\n","import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport userRecipesState from \"../../../recoil/UserRecipes\";\r\nimport currentRecipeIndexState from \"../../recoil/CurrentRecipeIndex\";\r\nimport EditComment from \"./EditComment\";\r\nimport Comment from \"./Comment\";\r\nimport isCommentsOpenState from \"../../recoil/IsCommentsOpen\";\r\nimport AddComment from \"./CommentButtons\";\r\nimport editCommentState from \"./recoil/EditCommentState\";\r\n\r\nconst useStyles = makeStyles({\r\n   container: {\r\n      paddingTop: 14,\r\n   },\r\n});\r\n\r\nconst Comments: FunctionComponent = () => {\r\n   // index of comment to edit\r\n   const edit = useRecoilValue(editCommentState);\r\n   const [isCommentsOpen, setCommentsOpen] =\r\n      useRecoilState(isCommentsOpenState);\r\n\r\n   const [index, setIndex] = useRecoilState(currentRecipeIndexState);\r\n   const recipes = useRecoilValue(userRecipesState);\r\n\r\n   const classes = useStyles();\r\n\r\n   const recipeElements = recipes[index].comments.map(\r\n      (value: string, index: number) => {\r\n         if (index === edit) {\r\n            return <EditComment text={value} index={index} key={index} />;\r\n         } else {\r\n            return <Comment text={value} index={index} key={index} />;\r\n         }\r\n      }\r\n   );\r\n\r\n   const closeModal = () => {\r\n      console.log(\"here\");\r\n      setCommentsOpen(false);\r\n      setIndex(-1);\r\n   };\r\n\r\n   return (\r\n      <Popup\r\n         open={isCommentsOpen}\r\n         onClose={closeModal}\r\n         position=\"center center\"\r\n      >\r\n         <Grid\r\n            container\r\n            direction=\"column\"\r\n            spacing={1}\r\n            className={classes.container}\r\n         >\r\n            {recipeElements}\r\n         </Grid>\r\n         <AddComment />\r\n      </Popup>\r\n   );\r\n};\r\n\r\nexport default Comments;\r\n","import { atom } from \"recoil\";\r\n\r\nconst confirmationOpenState = atom({\r\n   key: \"confirmationOpenState\",\r\n   default: false,\r\n});\r\n\r\nexport default confirmationOpenState;\r\n","import { atom } from \"recoil\";\r\n\r\n// used by comments and edit popups\r\nconst confirmationRequestState = atom({\r\n   key: \"confirmationRequestState\",\r\n   default: () => {},\r\n});\r\n\r\nexport default confirmationRequestState;\r\n","import { Button, makeStyles } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport confirmationOpenState from \"../../recoil/ConfirmationOpen\";\r\nimport confirmationRequestState from \"../../recoil/ConfirmationRequest\";\r\n\r\nconst useStyles = makeStyles({\r\n   cancel: {\r\n      backgroundColor: \"#B00020\",\r\n      color: \"#FFFFFF\",\r\n   },\r\n});\r\n\r\nconst Confirmation: FunctionComponent = () => {\r\n   const [confirmationOpen, setConfirmationOpen] = useRecoilState(\r\n      confirmationOpenState\r\n   );\r\n   const [confirmationRequest, setConfirmationRequest] = useRecoilState(\r\n      confirmationRequestState\r\n   );\r\n\r\n   const classes = useStyles();\r\n\r\n   const closeModal = () => {\r\n      setConfirmationOpen(false);\r\n      setConfirmationRequest(() => {});\r\n   };\r\n\r\n   const handleConfirm = () => {\r\n      confirmationRequest();\r\n      closeModal();\r\n   };\r\n\r\n   return (\r\n      <Popup\r\n         open={confirmationOpen}\r\n         closeOnDocumentClick\r\n         onClose={closeModal}\r\n         position=\"center center\"\r\n      >\r\n         Are you sure you want to send this request?\r\n         <Button variant=\"contained\" onClick={handleConfirm} color=\"secondary\">\r\n            Confirm\r\n         </Button>\r\n         <Button\r\n           \r\n            variant=\"contained\"\r\n          \r\n             onClick={closeModal}\r\n          \r\n             className={classes.cancel}\r\n         \r\n         >\r\n            Cancel\r\n         </Button>\r\n      </Popup>\r\n   );\r\n};\r\n\r\nexport default Confirmation;\r\n","import {  makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport searchState from \"../../../recoil/Search\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n   search: {\r\n      marginLeft: 5,\r\n      transform: \"translate(0px, 5px)\" \r\n   },\r\n   input: {\r\n      marginLeft: 10,\r\n      marginTop: \"1rem\"   \r\n   },\r\n   inputProps: {\r\n      fontSize: \"20px\"\r\n   }\r\n});\r\n\r\nconst RecipeSearch: FunctionComponent = () => {\r\n   const [search, setSearch] = useRecoilState(searchState);\r\n   const [open, setOpen] = useState(false);\r\n   const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n   const classes = useStyles();\r\n\r\n   const handleBlur = () => {\r\n      if (search === \"\") setOpen(false);\r\n   };\r\n\r\n   const handleClick = () => {\r\n      setOpen(true);\r\n   };\r\n\r\n   useEffect(() => {\r\n      if (inputRef.current) inputRef.current.focus();\r\n   })\r\n\r\n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setSearch(event.target.value);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {!open ? (\r\n            <Search\r\n               fontSize=\"large\"\r\n               onClick={handleClick}\r\n               className={classes.search}\r\n            />\r\n         ) : (\r\n            <TextField\r\n               inputProps={{ style: { fontSize: 20 } }}\r\n               className={classes.input}\r\n               inputRef={inputRef}\r\n               type=\"text\"\r\n               value={search}\r\n               onChange={handleChange}\r\n               onBlur={handleBlur}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default RecipeSearch;\r\n","import { Box, Button, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport currentRecipeIndexState from \"../../recoil/CurrentRecipeIndex\";\r\nimport currentRecipeUrl from \"../../recoil/CurrentRecipeUrl\";\r\nimport isAddState from \"../../recoil/IsAddState\";\r\nimport popupState from \"../../recoil/Popup\";\r\n\r\nconst useStyles = makeStyles({\r\n   recipeHeaderRight: {\r\n      float: \"right\",\r\n      marginBlockStart: \"0.83em\",\r\n      marginBlockEnd: \"0.3em\",\r\n      marginInlineStart: \"0\",\r\n   },\r\n});\r\n\r\nconst AddRecipe = () => {\r\n   const setOpen = useSetRecoilState(popupState);\r\n   const setAddState = useSetRecoilState(isAddState);\r\n   const setCurrentRecipe = useSetRecoilState(currentRecipeIndexState);\r\n   const setUrl = useSetRecoilState(currentRecipeUrl);\r\n\r\n   const classes = useStyles();\r\n\r\n   const onClick = () => {\r\n      setAddState(true);\r\n      setCurrentRecipe(-1);\r\n      setOpen(true);\r\n      setUrl(\"\");\r\n   }\r\n\r\n   return (\r\n      <Box component='span' className={classes.recipeHeaderRight}>\r\n         <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\r\n            Add Recipe\r\n         </Button>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default AddRecipe;\r\n","import { makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n   myRecipes: {\r\n      marginBlockEnd: \"0.3em\",\r\n      display: \"inline-block\",\r\n      fontSize: \"3rem\",\r\n   },\r\n});\r\n\r\nconst MyRecipes = () => {\r\n   const classes = useStyles();\r\n   return (\r\n      <Typography variant=\"h2\" className={classes.myRecipes}>\r\n         My Recipes\r\n      </Typography>\r\n   );\r\n};\r\n\r\nexport default MyRecipes;\r\n","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport RecipeSearch from \"../search-and-filter/RecipeSearch\";\r\nimport AddRecipe from \"./AddRecipe\";\r\nimport MyRecipes from \"./MyRecipes\";\r\n\r\nconst useStyles = makeStyles({\r\n   recipeHeader: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      borderBottom: \"1px solid #707070\",\r\n   },\r\n   recipeHeaderItemWrapper: {\r\n      width: \"50%\",\r\n      padding: \"0px 10px\",\r\n      margin: 0,\r\n   },\r\n});\r\n\r\nconst RecipeHeader = () => {\r\n   const classes = useStyles();\r\n   return (\r\n      <Box component=\"div\" className={classes.recipeHeader}>\r\n         <Box component=\"span\" className={classes.recipeHeaderItemWrapper}>\r\n            <MyRecipes />\r\n            <RecipeSearch />\r\n         </Box>\r\n         <Box component=\"span\" className={classes.recipeHeaderItemWrapper}>\r\n            <AddRecipe />\r\n         </Box>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default RecipeHeader;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport { FunctionComponent } from \"react\";\r\nimport IUrlProps from \"./types/RecipeCardUrlProps\";\r\n\r\nconst useStyles = makeStyles({\r\n   openExternal: {\r\n      \"&:hover\": {\r\n         cursor: \"pointer\",\r\n      },\r\n   },\r\n});\r\n\r\nconst RecipeCardOpenUrl: FunctionComponent<IUrlProps> = (props: IUrlProps) => {\r\n   const { url } = props;\r\n\r\n   const classes = useStyles();\r\n\r\n   const open = () => {\r\n      const win = window.open(url, \"_blank\");\r\n      win?.focus();\r\n   };\r\n\r\n   return <OpenInNewIcon className={classes.openExternal} onClick={open} />;\r\n};\r\n\r\nexport default RecipeCardOpenUrl;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { Edit } from \"@material-ui/icons\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport userRecipesState from \"../../../recoil/UserRecipes\";\r\nimport currentRecipeIndexState from \"../../recoil/CurrentRecipeIndex\";\r\nimport currentRecipeUrl from \"../../recoil/CurrentRecipeUrl\";\r\nimport isAddState from \"../../recoil/IsAddState\";\r\nimport popupState from \"../../recoil/Popup\";\r\nimport IRecipeCardEditProps from \"./types/RecipeCardEditProps\";\r\n\r\nconst useStyles = makeStyles({\r\n   edit: {\r\n      \"&:hover\": {\r\n         cursor: \"pointer\",\r\n      },\r\n   },\r\n});\r\n\r\nconst RecipeCardEdit: FunctionComponent<IRecipeCardEditProps> = (\r\n   props: IRecipeCardEditProps\r\n) => {\r\n   const classes = useStyles();\r\n   const { index } = props;\r\n\r\n   const setAddState = useSetRecoilState(isAddState);\r\n   const setCurrentRecipe = useSetRecoilState(currentRecipeIndexState);\r\n   const setOpen = useSetRecoilState(popupState);\r\n   const setUrl = useSetRecoilState(currentRecipeUrl);\r\n   const recipes = useRecoilValue(userRecipesState);\r\n\r\n   const onClick = () => {\r\n      setAddState(false);\r\n      setCurrentRecipe(index);\r\n      setOpen(true);\r\n      setUrl(recipes[index].url);\r\n   };\r\n\r\n   return <Edit onClick={onClick} className={classes.edit} />;\r\n};\r\n\r\nexport default RecipeCardEdit;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport authenticatedFetch from \"../../account/fetch/authenticatedfetch\";\r\nimport userRecipesState from \"../../recoil/UserRecipes\";\r\nimport confirmationOpenState from \"../recoil/ConfirmationOpen\";\r\nimport confirmationRequestState from \"../recoil/ConfirmationRequest\";\r\nimport IRecipeData from \"../types/RecipeData\";\r\nimport IRecipeCardControlProps from \"./recipe-card/types/RecipeCardControlProps\";\r\n\r\nconst useStyles = makeStyles({\r\n   trash: {\r\n      \"&:hover\": {\r\n         cursor: \"pointer\",\r\n      },\r\n   },\r\n});\r\n\r\nconst TrashIcon: FunctionComponent<IRecipeCardControlProps> = (\r\n   props: IRecipeCardControlProps\r\n) => {\r\n   const [recipes, setRecipes] = useRecoilState(userRecipesState);\r\n   const setConfirmationOpen = useSetRecoilState(confirmationOpenState);\r\n   const setConfirmationRequestState = useSetRecoilState(\r\n      confirmationRequestState\r\n   );\r\n   const { index, id } = props;\r\n\r\n   const classes = useStyles();\r\n\r\n   const handleRequest = () => {\r\n      return () => {\r\n         const newRecipes = recipes.slice();\r\n         authenticatedFetch(`/content/recipes?id=${id}`, undefined, \"DELETE\")\r\n            .then((value: IRecipeData) => {\r\n               newRecipes.splice(index, 1);;\r\n               setRecipes(newRecipes);\r\n            })\r\n            .catch((err: Error) => {\r\n               console.error(err);\r\n               });\r\n      };\r\n   };\r\n\r\n   const handleClick = () => {\r\n      setConfirmationRequestState(handleRequest);\r\n      setConfirmationOpen(true);\r\n   };\r\n\r\n   return <DeleteOutlined onClick={handleClick} className={classes.trash}  />;\r\n};\r\n\r\nexport default TrashIcon;\r\n","import { FunctionComponent } from \"react\";\r\nimport MenuBook from \"@material-ui/icons/MenuBook\";\r\nimport IRecipeCardEditProps from \"./types/RecipeCardEditProps\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport isCommentsOpenState from \"../../recoil/IsCommentsOpen\";\r\nimport currentRecipeIndexState from \"../../recoil/CurrentRecipeIndex\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n   menu: {\r\n      \"&:hover\": {\r\n         cursor: \"pointer\",\r\n      },\r\n   },\r\n});\r\n\r\nconst RecipeNotesIcon: FunctionComponent<IRecipeCardEditProps> = (\r\n   props: IRecipeCardEditProps\r\n) => {\r\n   const { index } = props;\r\n   const setCommentsOpen = useSetRecoilState(isCommentsOpenState);\r\n   const setCurrentRecipe = useSetRecoilState(currentRecipeIndexState);\r\n\r\n   const classes = useStyles();\r\n\r\n   const onClick = () => {\r\n      setCommentsOpen(true);\r\n      setCurrentRecipe(index);\r\n   };\r\n\r\n   return <MenuBook onClick={onClick} className={classes.menu} />;\r\n};\r\n\r\nexport default RecipeNotesIcon;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport RecipeCardOpenUrl from \"./RecipeCardOpenUrl\";\r\nimport IRecipeCardControlProps from \"./types/RecipeCardControlProps\";\r\nimport RecipeCardEdit from \"./RecipeCardEdit\";\r\nimport TrashIcon from \"../TrashIcon\";\r\nimport RecipeNotesIcon from \"./RecipeNotesIcon\";\r\n\r\nconst RecipeCardControl: FunctionComponent<IRecipeCardControlProps> = (\r\n   props: IRecipeCardControlProps\r\n) => {\r\n   const { url, index, id } = props;\r\n\r\n   return (\r\n      <>\r\n         <RecipeCardOpenUrl url={url} />\r\n         <RecipeCardEdit index={index} />\r\n         <TrashIcon url={url} index={index} id={id} />\r\n         <RecipeNotesIcon index={index} />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default RecipeCardControl;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport IRecipeCardDescriptionProps from \"./types/RecipeCardDescription\";\r\n\r\nconst RecipeCardDescription: FunctionComponent<IRecipeCardDescriptionProps> = (\r\n   props: IRecipeCardDescriptionProps\r\n) => {\r\n   const { description } = props;\r\n   return <Typography>{description}</Typography>;\r\n};\r\n\r\nexport default RecipeCardDescription;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport IRecipeCardTitleProps from \"./types/RecipeCardTitle\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n   title: {\r\n      fontSize: \"2rem\",\r\n      borderBottom: \"1px solid #707070\",\r\n   },\r\n});\r\n\r\nconst RecipeCardTitle: FunctionComponent<IRecipeCardTitleProps> = (\r\n   props: IRecipeCardTitleProps\r\n) => {\r\n   const classes = useStyles();\r\n   const { title } = props;\r\n   return (\r\n      <Typography variant=\"h3\" className={classes.title}>\r\n         {title}\r\n      </Typography>\r\n   );\r\n};\r\n\r\nexport default RecipeCardTitle;\r\n","import { Box } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport IRecipeCardProps from \"../../types/RecipeCardProps\";\r\nimport RecipeCardControl from \"./RecipeCardControl\";\r\nimport RecipeCardDescription from \"./RecipeCardDescription\";\r\nimport RecipeCardTitle from \"./RecipeCardTitle\";\r\n\r\nconst RecipeCardInfo: FunctionComponent<IRecipeCardProps> = (\r\n   props: IRecipeCardProps\r\n) => {\r\n   const { metadata, index } = props;\r\n   const { title, description, url, _id } = metadata;\r\n   return (\r\n      <Box component=\"span\">\r\n         <RecipeCardTitle title={title} />\r\n         <RecipeCardControl url={url} id={_id} index={index} />\r\n         <RecipeCardDescription description={description} />\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default RecipeCardInfo;\r\n","import { Card, CardContent, makeStyles } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport IRecipeCardProps from \"../../types/RecipeCardProps\";\r\nimport RecipeCardInfo from \"./RecipeCardInfo\";\r\n\r\nconst useStyles = makeStyles({\r\n   root: {\r\n      minWidth: 275,\r\n      maxWidth: 500,\r\n      margin: 50,\r\n   },\r\n   content: {\r\n      minWidth: 275,\r\n      maxWidth: 500,\r\n      padding: 15,\r\n   },\r\n   image: {\r\n      maxWidth: 500,\r\n      borderRadius: 5,\r\n   },\r\n   imageContainer: {\r\n      padding: 0,\r\n   },\r\n});\r\n\r\nconst RecipeCard: FunctionComponent<IRecipeCardProps> = (\r\n   props: IRecipeCardProps\r\n) => {\r\n   const classes = useStyles();\r\n\r\n   const { metadata, index } = props;\r\n   const { title, imageUrl } = metadata;\r\n   return (\r\n      <Card raised className={classes.root}>\r\n         <CardContent component=\"div\" className={classes.imageContainer}>\r\n            <img\r\n               src={imageUrl}\r\n               alt={`${title}`}\r\n               className={classes.image}\r\n            ></img>\r\n         </CardContent>\r\n         <CardContent className={classes.content} component=\"div\">\r\n            <RecipeCardInfo metadata={metadata} index={index} />\r\n         </CardContent>\r\n      </Card>\r\n   );\r\n};\r\n\r\nexport default RecipeCard;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React, { FunctionComponent, useCallback, useEffect } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport authenticatedFetch from \"../account/fetch/authenticatedfetch\";\r\nimport searchState from \"../recoil/Search\";\r\nimport userIdState from \"../recoil/UserId\";\r\nimport userRecipesState from \"../recoil/UserRecipes\";\r\nimport RecipePopup from \"./components/add-recipe/RecipePopup\";\r\nimport Comments from \"./components/comments/Comments\";\r\nimport Confirmation from \"./components/confirmation/Confirmation\";\r\nimport RecipeHeader from \"./components/header/RecipeHeader\";\r\nimport RecipeCard from \"./components/recipe-card/RecipeCard\";\r\nimport confirmationOpenState from \"./recoil/ConfirmationOpen\";\r\nimport isCommentsOpenState from \"./recoil/IsCommentsOpen\";\r\nimport popupState from \"./recoil/Popup\";\r\nimport IRecipeData from \"./types/RecipeData\";\r\n\r\nconst Dashboard: FunctionComponent = () => {\r\n   const [recipeData, setRecipeData] = useRecoilState(userRecipesState);\r\n   const userId = useRecoilValue(userIdState);\r\n   const search = useRecoilValue(searchState);\r\n   const popupOpen = useRecoilValue(popupState);\r\n   const confirmationOpen = useRecoilValue(confirmationOpenState);\r\n   const isCommentsOpen = useRecoilValue(isCommentsOpenState);\r\n\r\n   const getSearchRecipes = useCallback(() => {\r\n      const searchLower = search.toLowerCase();\r\n      const filterMethod = (str: string) => {\r\n         return str.toLowerCase().includes(searchLower);\r\n      };\r\n      return recipeData.filter((recipe) => {\r\n         return (\r\n            filterMethod(recipe.title) ||\r\n            filterMethod(recipe.author) ||\r\n            filterMethod(recipe.description) ||\r\n            filterMethod(recipe.source) ||\r\n            filterMethod(recipe.url) ||\r\n            recipe.comments.some((comment) => filterMethod(comment))\r\n         );\r\n      });\r\n   }, [search, recipeData]);\r\n\r\n   useEffect(() => {\r\n      authenticatedFetch(\r\n         `/content/recipes?uid=${userId}`,\r\n         undefined,\r\n         \"GET\"\r\n      ).then((value: IRecipeData[] | number) => {\r\n         if (value && !(typeof value === \"number\")) setRecipeData(value);\r\n      });\r\n   }, [userId, setRecipeData]);\r\n\r\n   // if (process.env.NODE_ENV === \"development\") {\r\n   //    recipe_data = require(\"./dev-data/data\").default;\r\n   // }\r\n   return (\r\n      <>\r\n         <RecipeHeader />\r\n         <Grid container spacing={0}>\r\n            {popupOpen && <RecipePopup />}\r\n            {confirmationOpen && <Confirmation />}\r\n            {isCommentsOpen && <Comments />}\r\n            {recipeData &&\r\n               getSearchRecipes().map((data: IRecipeData, index: number) => (\r\n                  <Grid item key={data._id}>\r\n                     <RecipeCard metadata={data} index={index} />\r\n                  </Grid>\r\n               ))}\r\n         </Grid>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport IAuthProps from \"./types/AuthProps\";\r\nimport Home from \"../home/Home\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport authenticatedFetch from \"../account/fetch/authenticatedfetch\";\r\nimport setToken from \"../account/utils/settoken\";\r\nimport userIdState from \"../recoil/UserId\";\r\n\r\nconst Authorization = (props: IAuthProps) => {\r\n   const [login, setLogin] = useRecoilState(loginState);\r\n   const setUserIdState = useSetRecoilState(userIdState);\r\n\r\n   useEffect(() => {\r\n      const response = authenticatedFetch(\r\n         \"auth/verify\",\r\n         JSON.stringify({}),\r\n         \"POST\"\r\n      );\r\n      response.then((value) => {\r\n         if (typeof value === \"number\") {\r\n            setLogin(false);\r\n         } else if (value) {\r\n            setLogin(true);\r\n            setToken(value.token);\r\n            setUserIdState(value.id);\r\n         }\r\n      });\r\n      // auth, check if logged in blah blah blah\r\n      //   setLogin(true);\r\n   }, [login, setLogin, setUserIdState]);\r\n\r\n   return <>{login ? <Dashboard /> : <Home />}</>;\r\n};\r\n\r\nexport default Authorization;\r\n","import {FunctionComponent} from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport {RecoilRoot} from 'recoil';\r\n\r\nimport Header from './common/Header';\r\nimport SignUp from './account/Signup';\r\n\r\nimport {\r\n   createMuiTheme,\r\n   makeStyles,\r\n   ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport SignIn from './account/Signin';\r\nimport Authorization from './auth/Authorization'\r\n\r\nconst useStyles = makeStyles({\r\n   App: {\r\n      height: \"100vh\",\r\n      padding: 0,\r\n   },\r\n   content: {\r\n      height: \"100%\",\r\n      marginTop: \"20px\",\r\n   },\r\n});\r\n\r\nconst App: FunctionComponent = () => {\r\n  const theme = createMuiTheme({\r\n     palette: {\r\n        primary: {\r\n           main: \"#01A299\",\r\n           contrastText: \"#fff\",\r\n        },\r\n        secondary: {\r\n           main: \"#6200EE\",\r\n           contrastText: \"#fff\",\r\n        },\r\n     },\r\n     typography: {\r\n        fontFamily: ['\"Noto Sans\"', 'Roboto', 'serif'].join(','),\r\n     },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n     <RecoilRoot>\r\n        <Router>\r\n           <ThemeProvider theme={theme}>\r\n              <div className={classes.App}>\r\n                 <Header />\r\n                 <div className={classes.content}>\r\n                    <Switch>\r\n                       <Route path=\"/\" exact component={Authorization} />\r\n                       <Route path=\"/signup\" exact component={SignUp} />\r\n                       <Route path=\"/signin\" exact component={SignIn} />\r\n                    </Switch>\r\n                 </div>\r\n              </div>\r\n           </ThemeProvider>\r\n        </Router>\r\n     </RecoilRoot>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// Breaks it? https://github.com/facebook/create-react-app/issues/10109#issuecomment-752421290 \r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}