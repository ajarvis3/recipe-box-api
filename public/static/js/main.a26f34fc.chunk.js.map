{"version":3,"sources":["common/Header.tsx","account/fetch/generalfetch.ts","account/Signup.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","to","path","exact","generalFetch","body","headers","host","url","fetch","method","then","value","json","err","console","error","data","log","token","localStorage","setItem","emailState","atom","key","default","passwordState","firstNameState","lastNameState","EnterText","props","text","setText","fieldName","type","changeState","useCallback","event","target","placeholder","onChange","FirstName","useRecoilState","firstName","setFirstName","LastName","lastName","setLastName","Email","email","setEmail","Password","password","setPassword","SignUp","useRecoilValue","id","Button","variant","color","onClick","JSON","stringify","undefined","Parameter","route","useParams","Home","App","theme","createMuiTheme","palette","primary","main","contrastText","secondary","ThemeProvider","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a26f34fc.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport './Header.css';\r\n\r\nimport { Link, Switch, Route } from \"react-router-dom\";  \r\n\r\n/**\r\n * Header Function Component\r\n * App name, whatever\r\n */\r\nconst Header: FunctionComponent = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <span className=\"headerItemWrapper\">\r\n                <h1 className=\"appName\">\r\n                    <Link to=\"/\" className=\"headerLink\">\r\n                        Recipe Box\r\n                    </Link>\r\n                </h1>\r\n            </span>\r\n            <span className=\"headerItemWrapper\">\r\n                <h3 className=\"headerRightSide\">\r\n                    <Switch>\r\n                        <Route path=\"/\" exact>\r\n                            <Link to={\"/signup\"} className=\"headerLink\">\r\n                                Sign Up\r\n                            </Link>\r\n                        </Route>\r\n                    </Switch>\r\n                </h3>\r\n            </span>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","const generalFetch = (\r\n  path: string,\r\n  body: BodyInit,\r\n  headers: HeadersInit | undefined\r\n) => {\r\n  if (!headers) {\r\n    headers = {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n    };\r\n  }\r\n  // switch this to env at some point\r\n  const env = process.env.NODE_ENV || \"development\";\r\n  let host = \"https://recipeboxapp.azurewebsites.net\";\r\n  if (env === \"development\") host = \"http://localhost:8080\";\r\n  const url = `${host}/${path}`;\r\n  fetch(url, {\r\n    method: \"POST\",\r\n    headers: headers,\r\n    body: body,\r\n  })\r\n    .then(\r\n      (value) => value.json(),\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    )\r\n    .then(\r\n      (data) => {\r\n        console.log(data);\r\n        if (data && data.token) localStorage.setItem(\"token\", data.token);\r\n      },\r\n      (err) => console.error(err)\r\n    );\r\n};\r\n\r\nexport default generalFetch;\r\n","import React, { FunctionComponent, useCallback } from \"react\";\r\nimport { atom, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Signup.css\";\r\nimport generalFetch from \"./fetch/generalfetch\";\r\n\r\nconst emailState = atom({\r\n   key: \"emailState\", // unique ID (with respect to other atoms/selectors)\r\n   default: \"\", // default value (aka initial value)\r\n});\r\n\r\nconst passwordState = atom({\r\n   key: \"passwordState\",\r\n   default: \"\",\r\n});\r\n\r\nconst firstNameState = atom({\r\n   key: \"firstNameState\",\r\n   default: \"\",\r\n});\r\n\r\nconst lastNameState = atom({\r\n   key: \"lastNameState\",\r\n   default: \"\",\r\n});\r\n\r\n/**\r\n * Used as props for text input\r\n */\r\ninterface TextProps {\r\n   text: string;\r\n   setText: (text: string) => void;\r\n   fieldName: string;\r\n   type: string;\r\n}\r\n\r\n/**\r\n * General Text Input\r\n */\r\nconst EnterText: FunctionComponent<TextProps> = (props: TextProps) => {\r\n   const { text, setText, fieldName, type } = props;\r\n\r\n   const changeState = useCallback(\r\n      (event: React.ChangeEvent<HTMLInputElement>) => {\r\n         setText(event.target.value);\r\n      },\r\n      [setText]\r\n   );\r\n\r\n   return (\r\n      <div className=\"enterText\">\r\n         <div>{fieldName}:</div>\r\n         <input\r\n            type={type}\r\n            placeholder={fieldName}\r\n            value={text}\r\n            className=\"enterTextInput\"\r\n            onChange={changeState}\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\n/**\r\n * Area to enter the first name\r\n */\r\nconst FirstName: FunctionComponent = () => {\r\n   const [firstName, setFirstName] = useRecoilState(firstNameState);\r\n\r\n   return (\r\n      <EnterText\r\n         text={firstName}\r\n         setText={setFirstName}\r\n         fieldName={\"First Name\"}\r\n         type=\"text\"\r\n      />\r\n   );\r\n};\r\n\r\n/**\r\n * Area to enter the last name\r\n */\r\nconst LastName: FunctionComponent = () => {\r\n   const [lastName, setLastName] = useRecoilState(lastNameState);\r\n\r\n   return (\r\n      <EnterText\r\n         text={lastName}\r\n         setText={setLastName}\r\n         fieldName={\"Last Name\"}\r\n         type=\"email\"\r\n      />\r\n   );\r\n};\r\n\r\n/**\r\n * Area to enter the email\r\n */\r\nconst Email: FunctionComponent = () => {\r\n   const [email, setEmail] = useRecoilState(emailState);\r\n\r\n   return (\r\n      <EnterText\r\n         text={email}\r\n         setText={setEmail}\r\n         fieldName={\"Email\"}\r\n         type=\"text\"\r\n      />\r\n   );\r\n};\r\n\r\n/**\r\n * Area to enter the password\r\n */\r\nconst Password: FunctionComponent = () => {\r\n   const [password, setPassword] = useRecoilState(passwordState);\r\n\r\n   return (\r\n      <EnterText\r\n         text={password}\r\n         setText={setPassword}\r\n         fieldName={\"Password\"}\r\n         type=\"password\"\r\n      />\r\n   );\r\n};\r\n\r\n/**\r\n * Sign Up Page\r\n */\r\nconst SignUp: FunctionComponent = () => {\r\n   const firstName = useRecoilValue(firstNameState);\r\n   const lastName = useRecoilValue(lastNameState);\r\n   const password = useRecoilValue(passwordState);\r\n   const email = useRecoilValue(emailState);\r\n\r\n   const onClick = () => {\r\n     generalFetch(\r\n       \"users/signup\",\r\n       JSON.stringify({\r\n         firstName: firstName,\r\n         lastName: lastName,\r\n         password: password,\r\n         email: email,\r\n       }),\r\n       undefined\r\n     );\r\n   };\r\n\r\n   return (\r\n     <div id=\"signUpBox\">\r\n       <FirstName />\r\n       <LastName />\r\n       <Email />\r\n       <Password />\r\n       <div className=\"signupButton\">\r\n         <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\r\n           Sign Up\r\n         </Button>\r\n       </div>\r\n     </div>\r\n   );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, {FunctionComponent} from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport {RecoilRoot} from 'recoil';\r\n\r\nimport './App.css';\r\n\r\nimport Header from './common/Header';\r\nimport SignUp from './account/Signup';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\ninterface IParams {\r\n  route: string\r\n}\r\n\r\nconst Parameter: FunctionComponent = () => {\r\n  let { route } = useParams<IParams>();\r\n  return (\r\n    <h3>\r\n      {route}\r\n    </h3>\r\n  );\r\n}\r\n\r\nconst Home: FunctionComponent = () => {\r\n  return (\r\n    <h1>\r\n      Home\r\n    </h1>\r\n  )\r\n}\r\n\r\nconst App: FunctionComponent = () => {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#01A299',\r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        main: '#6200EE',\r\n        contrastText: '#fff',\r\n      },\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <RecoilRoot>\r\n      <Router>\r\n        <ThemeProvider theme={theme}>\r\n          <div className=\"App\">\r\n            <Header />\r\n            <div className=\"content\">\r\n              <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/signup\" exact component={SignUp} />\r\n                <Route path=\"/:route\" component={Parameter} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </ThemeProvider>\r\n      </Router>\r\n    </RecoilRoot>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// Breaks it? https://github.com/facebook/create-react-app/issues/10109#issuecomment-752421290 \r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}