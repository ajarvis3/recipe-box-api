{"version":3,"sources":["recoil/LoginState.ts","common/utils/deletetoken.ts","common/SignOut.tsx","common/Header.tsx","recoil/Email.ts","recoil/FirstName.ts","recoil/LastName.ts","recoil/Password.ts","account/fetch/generalfetch.ts","hooks/Cleanup.ts","recoil/utils/getByName.ts","hooks/UseChangeState.ts","hooks/UseStateValue.ts","account/EnterText.tsx","account/utils/settoken.ts","account/Signup.tsx","account/Signin.tsx","home/Home.tsx","account/fetch/fetchmetadata.ts","dashboard/Dashboard.tsx","account/fetch/authenticatedfetch.ts","auth/Authorization.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["loginState","atom","key","default","deleteToken","localStorage","removeItem","SignOut","setLogin","useSetRecoilState","to","onClick","className","Header","login","useRecoilValue","path","exact","emailState","firstNameState","lastNameState","passwordState","generalFetch","body","headers","method","host","url","fetch","then","value","status","json","err","console","error","useCleanup","setStates","defaultValue","useEffect","forEach","setState","getByName","name","nameState","replace","charAt","toLowerCase","slice","result","undefined","Object","values","state","some","val","useChangeState","stateAtom","event","target","useStateValue","EnterText","props","fieldName","type","onChange","text","placeholder","setToken","data","token","setItem","SignUp","useRecoilState","firstName","setFirstName","lastName","setLastName","password","setPassword","email","setEmail","id","Button","variant","color","JSON","stringify","SignIn","Home","fetchMetaData","log","Dashboard","authenticatedFetch","getItem","Authorization","App","theme","createMuiTheme","palette","primary","main","contrastText","secondary","ThemeProvider","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92b8ca20.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nconst loginState = atom({\r\n   key: \"loginState\",\r\n   default: false,\r\n});\r\n\r\nexport default loginState;\r\n","const deleteToken = () => {\r\n   localStorage.removeItem(\"token\");\r\n};\r\n\r\nexport default deleteToken;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport deleteToken from \"./utils/deletetoken\";\r\n\r\nconst SignOut = () => {\r\n   const setLogin = useSetRecoilState(loginState);\r\n\r\n   const onClick = () => {\r\n      setLogin(false);\r\n      deleteToken();\r\n   };\r\n\r\n   return (\r\n      (\r\n      <Link to=\"/\" onClick={onClick} className=\"headerLink\">\r\n         \r\n         Sign out\r\n      \r\n      </Link>\r\n   )\r\n   );\r\n};\r\n\r\nexport default SignOut;\r\n","import React, { FunctionComponent } from 'react';\r\nimport './Header.css';\r\n\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport SignOut from './SignOut';\r\n  \r\n\r\n/**\r\n * Header Function Component\r\n * App name, whatever\r\n */\r\nconst Header: FunctionComponent = () => {\r\n    const login = useRecoilValue(loginState);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <span className=\"headerItemWrapper\">\r\n                <h1 className=\"appName\">\r\n                    <Link to=\"/\" className=\"headerLink\">\r\n                        Recipe Box\r\n                    </Link>\r\n                </h1>\r\n            </span>\r\n            <span className=\"headerItemWrapper\">\r\n                <h3 className=\"headerRightSide\">\r\n                    <Switch>\r\n                        {!login ? \r\n                            <Route path=\"/\" exact>\r\n                                <Link to={\"/signup\"} className=\"headerLink\">\r\n                                    Sign Up\r\n                                </Link>\r\n                            </Route>\r\n                            : <SignOut />\r\n                        }\r\n                    </Switch>\r\n                </h3>\r\n            </span>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { atom } from \"recoil\";\r\n\r\nconst emailState = atom({\r\n   key: \"emailState\", // unique ID (with respect to other atoms/selectors)\r\n   default: \"\", // default value (aka initial value)\r\n});\r\n\r\nexport default emailState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst firstNameState = atom({\r\n   key: \"firstNameState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default firstNameState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst lastNameState = atom({\r\n   key: \"lastNameState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default lastNameState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst passwordState = atom({\r\n   key: \"passwordState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default passwordState;\r\n","const generalFetch = (\r\n   path: string,\r\n   body: BodyInit,\r\n   headers: HeadersInit | undefined,\r\n   method: string\r\n) => {\r\n   if (!headers) {\r\n      headers = {\r\n         \"Content-type\": \"application/json; charset=UTF-8\",\r\n      };\r\n   }\r\n   // switch this to env at some point\r\n   const env = process.env.NODE_ENV || \"development\";\r\n   let host = \"https://recipeboxapp.azurewebsites.net\";\r\n   if (env === \"development\") host = \"http://localhost:8080\";\r\n   const url = `${host}/${path}`;\r\n   return fetch(url, {\r\n      method: method,\r\n      headers: headers,\r\n      body: body,\r\n   }).then(\r\n      (value) => {\r\n         if (value.status >= 200 && value.status <= 300) {\r\n            return value.json();\r\n         } else {\r\n            return value.status;\r\n         }\r\n      },\r\n      (err) => {\r\n         console.error(err);\r\n      }\r\n   );\r\n};\r\n\r\nexport default generalFetch;\r\n","import { useEffect } from \"react\";\r\nimport { SetterOrUpdater } from \"recoil\";\r\n\r\n/**\r\n * Currently sets all states to a given default value\r\n * Should probably be renamed to something more appropriate\r\n * @param setStates setters\r\n * @param defaultValue value to set state to\r\n */\r\nfunction useCleanup<T>(setStates: SetterOrUpdater<T>[], defaultValue: T) {\r\n   useEffect(() => {\r\n      setStates.forEach((setState) => {\r\n         setState(defaultValue);\r\n      });\r\n      // run once per component\r\n      // eslint-disable-next-line\r\n   }, []);\r\n}\r\n\r\nexport default useCleanup;\r\n","import { RecoilState } from \"recoil\";\r\nimport * as state from \"../index\";\r\n\r\nconst getByName = (name: string): RecoilState<any> => {\r\n   name = name.replace(\" \", \"\");\r\n   const nameState = name.charAt(0).toLowerCase() + name.slice(1) + \"State\";\r\n   var result: RecoilState<any> | undefined = undefined;\r\n   Object.values(state).some((val: RecoilState<any>) => {\r\n      if (val.key === nameState) {\r\n         result = val;\r\n         return true;\r\n      }\r\n      return false;\r\n   });\r\n   const returnValue = (result as unknown) as RecoilState<any>;\r\n   return returnValue;\r\n};\r\n\r\nexport default getByName;\r\n","import { RecoilState, useSetRecoilState } from \"recoil\";\r\nimport getByName from \"../recoil/utils/getByName\";\r\n\r\nfunction useChangeState(name: string) {\r\n   const stateAtom: RecoilState<any> | undefined = getByName(name);\r\n   const setState = useSetRecoilState(stateAtom);\r\n   return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState(event.target.value);\r\n   };\r\n}\r\n\r\nexport default useChangeState;\r\n","import { RecoilState, useRecoilValue } from \"recoil\";\r\nimport getByName from \"../recoil/utils/getByName\";\r\n\r\nfunction useStateValue(name: string) {\r\n   const stateAtom: RecoilState<any> | undefined = getByName(name);\r\n   const stateValue = useRecoilValue(stateAtom);\r\n   return stateValue;\r\n}\r\n\r\nexport default useStateValue;\r\n","import { FunctionComponent } from \"react\";\r\nimport useChangeState from \"../hooks/UseChangeState\";\r\nimport useStateValue from \"../hooks/UseStateValue\";\r\nimport ITextProps from \"./types/TextProps\";\r\n\r\n/**\r\n * General Text Input\r\n */\r\nconst EnterText: FunctionComponent<ITextProps> = (props: ITextProps) => {\r\n   const { fieldName, type } = props;\r\n\r\n   const onChange = useChangeState(fieldName);\r\n   const text = useStateValue(fieldName);\r\n\r\n   return (\r\n      <div className=\"enterText\">\r\n         <div>{fieldName}:</div>\r\n         <input\r\n            type={type}\r\n            placeholder={fieldName}\r\n            value={text}\r\n            className=\"enterTextInput\"\r\n            name={fieldName}\r\n            onChange={onChange}\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EnterText;\r\n","import Token from \"../types/Token\";\r\n\r\nconst setToken = (data: Token) => {\r\n   if (data && data.token) localStorage.setItem(\"token\", data.token);\r\n};\r\n\r\nexport default setToken;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Signup.css\";\r\nimport {\r\n   emailState,\r\n   firstNameState,\r\n   lastNameState,\r\n   passwordState,\r\n} from \"../recoil\";\r\n\r\nimport generalFetch from \"./fetch/generalfetch\";\r\nimport useCleanup from \"../hooks/Cleanup\";\r\nimport EnterText from \"./EnterText\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport setToken from \"./utils/settoken\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n * Sign Up Page\r\n */\r\nconst SignUp: FunctionComponent = () => {\r\n   const [firstName, setFirstName] = useRecoilState(firstNameState);\r\n   const [lastName, setLastName] = useRecoilState(lastNameState);\r\n   const [password, setPassword] = useRecoilState(passwordState);\r\n   const [email, setEmail] = useRecoilState(emailState);\r\n   const [login, setLogin] = useRecoilState(loginState);\r\n\r\n   useCleanup<string>([setFirstName, setLastName, setPassword, setEmail], \"\");\r\n\r\n   const onClick = () => {\r\n      const response = generalFetch(\r\n         \"users/signup\",\r\n         JSON.stringify({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            password: password,\r\n         }),\r\n         {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n         },\r\n         \"POST\"\r\n      );\r\n      response.then((value) => {\r\n         if (typeof value === \"number\") {\r\n            // do nothing\r\n         } else {\r\n            setLogin(true);\r\n            setToken(value);\r\n            return <Redirect to=\"/\" />;\r\n         }\r\n      });\r\n   };\r\n\r\n   return !login ? (\r\n      <div id=\"signUpBox\">\r\n         <EnterText fieldName={\"First Name\"} type=\"text\" />\r\n         <EnterText fieldName={\"Last Name\"} type=\"email\" />\r\n         <EnterText fieldName={\"Email\"} type=\"text\" />\r\n         <EnterText fieldName={\"Password\"} type=\"password\" />\r\n         <div className=\"signupButton\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\r\n               Sign Up\r\n            </Button>\r\n         </div>\r\n      </div>\r\n   ) : (\r\n      <Redirect to=\"/\" />\r\n   );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Signup.css\";\r\nimport { emailState, passwordState } from \"../recoil\";\r\nimport useCleanup from \"../hooks/Cleanup\";\r\nimport generalFetch from \"./fetch/generalfetch\";\r\nimport setToken from \"./utils/settoken\";\r\nimport EnterText from \"./EnterText\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport loginState from \"../recoil/LoginState\";\r\n\r\n/**\r\n * Sign In Page\r\n */\r\nconst SignIn: FunctionComponent = () => {\r\n   const [password, setPassword] = useRecoilState(passwordState);\r\n   const [email, setEmail] = useRecoilState(emailState);\r\n   const [login, setLogin] = useRecoilState(loginState);\r\n\r\n   useCleanup<string>([setPassword, setEmail], \"\");\r\n\r\n   const onClick = () => {\r\n      const response = generalFetch(\r\n         \"auth/signin\",\r\n         JSON.stringify({\r\n            email: email,\r\n            password: password,\r\n         }),\r\n         {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n         },\r\n         \"POST\"\r\n      );\r\n      response.then((value) => {\r\n         if (typeof value === \"number\") {\r\n            // do nothing\r\n         } else {\r\n            setLogin(true);\r\n            setToken(value);\r\n            return <Redirect to=\"/\" />;\r\n         }   \r\n      })\r\n   };\r\n\r\n   return (\r\n      (!login ?\r\n      <div id=\"signUpBox\">\r\n         <EnterText fieldName={\"Email\"} type=\"text\" />\r\n\r\n         <EnterText fieldName={\"Password\"} type=\"password\" />\r\n         <div className=\"signupButton\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\r\n               Sign In\r\n            </Button>\r\n         </div>\r\n      </div> : <Redirect to='/' />)\r\n   );\r\n};\r\n\r\nexport default SignIn;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nconst Home: FunctionComponent = () => {\r\n   return (\r\n      <>\r\n         <h1>Home</h1>\r\n\r\n         <Link to={\"/signin\"} className=\"signupButton\">\r\n            <Button variant=\"contained\" color=\"primary\">\r\n               Sign In\r\n            </Button>\r\n         </Link>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","const fetchMetaData = (url: string) => {\r\n   // switch this to env at some point\r\n   return fetch(url).then(\r\n      (value) => {\r\n         console.log(value);\r\n      },\r\n      (err) => {\r\n         console.error(err);\r\n      }\r\n   );\r\n};\r\n\r\nexport default fetchMetaData;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport fetchMetaData from \"../account/fetch/fetchmetadata\";\r\n\r\nconst Dashboard: FunctionComponent = () => {\r\n   fetchMetaData(\r\n      \"https://joyfoodsunshine.com/the-most-amazing-chocolate-chip-cookies/\"\r\n   );\r\n\r\n   return <span>dashboard</span>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import generalFetch from \"./generalfetch\";\r\n\r\nconst authenticatedFetch = (path: string, body: BodyInit, method: string) => {\r\n   const headers: HeadersInit = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authentication\": \"bearer \" + localStorage.getItem(\"token\"),\r\n   };\r\n   return generalFetch(path, body, headers, method);\r\n};\r\n\r\nexport default authenticatedFetch;\r\n","import React, { useEffect } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport IAuthProps from \"./types/AuthProps\";\r\nimport Home from \"../home/Home\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport authenticatedFetch from \"../account/fetch/authenticatedfetch\";\r\nimport setToken from \"../account/utils/settoken\";\r\n\r\nconst Authorization = (props: IAuthProps) => {\r\n   const [login, setLogin] = useRecoilState(loginState);\r\n\r\n   useEffect(() => {\r\n      const response = authenticatedFetch(\r\n         \"auth/verify\",\r\n         JSON.stringify({}),\r\n         \"POST\"\r\n      );\r\n      response.then((value) => {\r\n         if (typeof value === \"number\") {\r\n            setLogin(false);\r\n         } else {\r\n            setLogin(true);\r\n            setToken(value);\r\n         }   \r\n      })\r\n      // auth, check if logged in blah blah blah\r\n      //   setLogin(true);\r\n   }, [login, setLogin]);\r\n\r\n   return <>{login ? <Dashboard /> : <Home />}</>;\r\n};\r\n\r\nexport default Authorization;\r\n","import {FunctionComponent} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {RecoilRoot} from 'recoil';\n\nimport './App.css';\n\nimport Header from './common/Header';\nimport SignUp from './account/Signup';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport SignIn from './account/Signin';\nimport Authorization from './auth/Authorization'\n\nconst App: FunctionComponent = () => {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#01A299',\n        contrastText: '#fff',\n      },\n      secondary: {\n        main: '#6200EE',\n        contrastText: '#fff',\n      },\n    },\n  });\n  \n  return (\n     <RecoilRoot>\n        <Router>\n           <ThemeProvider theme={theme}>\n              <div className=\"App\">\n                 <Header />\n                     <div className=\"content\">\n                        <Switch>\n                           <Route path=\"/\" exact component={Authorization} />\n                           <Route path=\"/signup\" exact component={SignUp} />\n                           <Route path=\"/signin\" exact component={SignIn} />\n                           {/* <Route path=\"/:route\" component={Parameter} /> */}\n                        </Switch>\n                     </div>\n              </div>\n           </ThemeProvider>\n        </Router>\n     </RecoilRoot>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// Breaks it? https://github.com/facebook/create-react-app/issues/10109#issuecomment-752421290 \nreportWebVitals(console.log);\n"],"sourceRoot":""}