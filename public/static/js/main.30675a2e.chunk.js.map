{"version":3,"sources":["recoil/LoginState.ts","recoil/UserId.ts","common/styles/index.ts","common/utils/deletetoken.ts","common/SignOut.tsx","common/Header.tsx","recoil/Email.ts","recoil/FirstName.ts","recoil/LastName.ts","recoil/Password.ts","account/fetch/generalfetch.ts","hooks/Cleanup.ts","recoil/utils/getByName.ts","hooks/UseChangeState.ts","hooks/UseStateValue.ts","account/EnterText.tsx","account/utils/settoken.ts","account/styles/index.ts","account/Signup.tsx","account/Signin.tsx","home/Home.tsx","account/fetch/authenticatedfetch.ts","recoil/UserRecipes.ts","dashboard/recoil/Popup.ts","dashboard/recoil/CurrentRecipeUrl.ts","dashboard/components/add-recipe/UrlInput.tsx","dashboard/components/add-recipe/RecipePopup.tsx","dashboard/components/header/AddRecipe.tsx","dashboard/components/header/MyRecipes.tsx","dashboard/components/header/RecipeHeader.tsx","dashboard/components/recipe-card/RecipeCardOpenUrl.tsx","dashboard/components/recipe-card/RecipeCardControl.tsx","dashboard/components/recipe-card/RecipeCardDescription.tsx","dashboard/components/recipe-card/RecipeCardTitle.tsx","dashboard/components/recipe-card/RecipeCardInfo.tsx","dashboard/components/recipe-card/RecipeCard.tsx","dashboard/Dashboard.tsx","auth/Authorization.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["loginState","atom","key","default","userIdState","useCommonStyles","makeStyles","headerLink","content","color","transitionDuration","signInOut","fontSize","deleteToken","localStorage","removeItem","SignOut","setLogin","useSetRecoilState","setUserId","commonClasses","to","onClick","className","useStyles","title","left","margin","header","width","backgroundColor","padding","display","flexDirection","headerItemWrapper","headerRightSide","float","Header","login","useRecoilValue","classes","Box","component","Typography","variant","path","exact","emailState","firstNameState","lastNameState","passwordState","generalFetch","urlPath","body","headers","method","env","process","host","console","log","url","URL","href","fetch","then","value","status","json","err","error","useCleanup","setStates","defaultValue","useEffect","forEach","setState","getByName","name","nameState","replace","charAt","toLowerCase","slice","result","undefined","Object","values","state","some","val","useChangeState","stateAtom","event","target","useStateValue","enterText","textAlign","enterTextInput","borderRadius","EnterText","props","fieldName","type","onChange","text","TextField","placeholder","setToken","data","token","setItem","signUpBox","border","signUpButton","SignUp","useRecoilState","firstName","setFirstName","lastName","setLastName","password","setPassword","email","setEmail","onSubmit","e","preventDefault","JSON","stringify","id","Button","SignIn","signIn","Home","authenticatedFetch","getItem","userRecipesState","popupState","currentRecipeUrl","UrlInput","setUrl","recipeData","setRecipeData","newRecipeData","push","RecipePopup","useState","open","setOpen","closeOnDocumentClick","onClose","position","recipeHeaderRight","marginRight","marginBlockStart","marginBlockEnd","marginInlineStart","AddRecipe","myRecipes","MyRecipes","recipeHeader","borderBottom","recipeHeaderItemWrapper","RecipeHeader","openExternal","cursor","RecipeCardOpenUrl","win","window","focus","RecipeCardControl","RecipeCardDescription","description","RecipeCardTitle","RecipeCardInfo","metadata","_id","root","minWidth","maxWidth","image","imageContainer","RecipeCard","imageUrl","Card","raised","CardContent","src","alt","Dashboard","userId","Grid","container","spacing","map","item","Authorization","setUserIdState","App","height","marginTop","theme","createMuiTheme","palette","primary","main","contrastText","secondary","typography","fontFamily","join","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30675a2e.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nconst loginState = atom({\r\n   key: \"loginState\",\r\n   default: false,\r\n});\r\n\r\nexport default loginState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst userIdState = atom({\r\n   key: \"userIdState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default userIdState;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useCommonStyles = makeStyles({\r\n   headerLink: {\r\n      \"&:hover\": {\r\n         content: '\"\"',\r\n         color: \"black\",\r\n         transitionDuration: \".5s\",\r\n      },\r\n      \"textDecoration\": \"none\",\r\n      \"color\": \"white\",\r\n      \"margin\": \"auto 0px\",\r\n   },\r\n   signInOut: {\r\n      fontSize: \"2rem\",\r\n   },\r\n});\r\n\r\nexport default useCommonStyles;\r\n","const deleteToken = () => {\r\n   localStorage.removeItem(\"token\");\r\n};\r\n\r\nexport default deleteToken;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport userIdState from \"../recoil/UserId\";\r\nimport useCommonStyles from \"./styles\";\r\nimport deleteToken from \"./utils/deletetoken\";\r\n\r\nconst SignOut = () => {\r\n   const setLogin = useSetRecoilState(loginState);\r\n   const setUserId = useSetRecoilState(userIdState);\r\n   const commonClasses = useCommonStyles();\r\n\r\n   const onClick = () => {\r\n      setLogin(false);\r\n      setUserId(\"\");\r\n      deleteToken();\r\n   };\r\n\r\n   return (\r\n      <Link\r\n         to=\"/\"\r\n         onClick={onClick}\r\n         className={commonClasses.signInOut + \" \" + commonClasses.headerLink}\r\n      >\r\n         Sign out\r\n      </Link>\r\n   );\r\n};\r\n\r\nexport default SignOut;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport SignOut from './SignOut';\r\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport useCommonStyles from \"./styles\";\r\n\r\nconst useStyles = makeStyles({\r\n   title: {\r\n      fontSize: \"3rem\",\r\n      left: 0,\r\n      margin: 0,\r\n   },\r\n   header: {\r\n      width: \"100%\",\r\n      margin: 0,\r\n      backgroundColor: \"#01A299\",\r\n      color: \"white\",\r\n      padding: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n   },\r\n   headerItemWrapper: {\r\n      width: \"50%\",\r\n      padding: \"10px\",\r\n  },\r\n  headerRightSide: {\r\n      float: \"right\",\r\n      margin: 0\r\n   }\r\n  \r\n}); \r\n  \r\n\r\n/**\r\n * Header Function Component\r\n * App name, whatever\r\n */\r\nconst Header: FunctionComponent = () => {\r\n    const login = useRecoilValue(loginState);\r\n    const classes = useStyles();\r\n    const commonClasses = useCommonStyles();\r\n\r\n    return (\r\n       <Box component=\"div\" className={classes.header}>\r\n          <Box component=\"span\" className={classes.headerItemWrapper}>\r\n             <Typography variant=\"h1\" className={classes.title}>\r\n                <Link to=\"/\" className={commonClasses.headerLink}>\r\n                   Recipe Box\r\n                </Link>\r\n             </Typography>\r\n          </Box>\r\n          <Box component=\"span\" className={classes.headerItemWrapper}>\r\n             <Typography variant=\"h3\" className={classes.headerRightSide}>\r\n                <Switch>\r\n                   {!login ? (\r\n                      <Route path=\"/\" exact>\r\n                         <Link to={\"/signup\"} className={commonClasses.headerLink + \" \" + commonClasses.signInOut}>\r\n                            Sign Up\r\n                         </Link>\r\n                      </Route>\r\n                   ) : (\r\n                      <SignOut />\r\n                   )}\r\n                </Switch>\r\n             </Typography>\r\n          </Box>\r\n       </Box>\r\n    );\r\n}\r\n\r\nexport default Header;","import { atom } from \"recoil\";\r\n\r\nconst emailState = atom({\r\n   key: \"emailState\", // unique ID (with respect to other atoms/selectors)\r\n   default: \"\", // default value (aka initial value)\r\n});\r\n\r\nexport default emailState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst firstNameState = atom({\r\n   key: \"firstNameState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default firstNameState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst lastNameState = atom({\r\n   key: \"lastNameState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default lastNameState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst passwordState = atom({\r\n   key: \"passwordState\",\r\n   default: \"\",\r\n});\r\n\r\nexport default passwordState;\r\n","const generalFetch = (\r\n   urlPath: string,\r\n   body: BodyInit | undefined,\r\n   headers: HeadersInit | undefined,\r\n   method: string\r\n) => {\r\n   if (!headers) {\r\n      headers = {\r\n         \"Content-type\": \"application/json; charset=UTF-8\",\r\n      };\r\n   }\r\n   // switch this to env at some point\r\n   const env = process.env.NODE_ENV || \"development\";\r\n   let host = \"https://recipeboxapp.azurewebsites.net\";\r\n   if (env === \"development\") host = \"http://localhost:8080\";\r\n   console.log(env);\r\n   console.log(host);\r\n   const url = new URL(urlPath, host).href;\r\n   const options = body\r\n      ? {\r\n            method: method,\r\n            headers: headers,\r\n            body: body,\r\n         }\r\n      : {\r\n            method: method,\r\n            headers: headers,\r\n         };;\r\n   return fetch(url, options).then(\r\n      (value) => {\r\n         if (value.status >= 200 && value.status <= 300) {\r\n            return value.json();\r\n         } else {\r\n            return value.status;\r\n         }\r\n      },\r\n      (err) => {\r\n         console.error(err);\r\n      }\r\n   );\r\n};\r\n\r\nexport default generalFetch;\r\n","import { useEffect } from \"react\";\r\nimport { SetterOrUpdater } from \"recoil\";\r\n\r\n/**\r\n * Currently sets all states to a given default value\r\n * Should probably be renamed to something more appropriate\r\n * @param setStates setters\r\n * @param defaultValue value to set state to\r\n */\r\nfunction useCleanup<T>(setStates: SetterOrUpdater<T>[], defaultValue: T) {\r\n   useEffect(() => {\r\n      setStates.forEach((setState) => {\r\n         setState(defaultValue);\r\n      });\r\n      // run once per component\r\n      // eslint-disable-next-line\r\n   }, []);\r\n}\r\n\r\nexport default useCleanup;\r\n","import { RecoilState } from \"recoil\";\r\nimport * as state from \"../index\";\r\n\r\nconst getByName = (name: string): RecoilState<any> => {\r\n   name = name.replace(\" \", \"\");\r\n   const nameState = name.charAt(0).toLowerCase() + name.slice(1) + \"State\";\r\n   var result: RecoilState<any> | undefined = undefined;\r\n   Object.values(state).some((val: RecoilState<any>) => {\r\n      if (val.key === nameState) {\r\n         result = val;\r\n         return true;\r\n      }\r\n      return false;\r\n   });\r\n   const returnValue = (result as unknown) as RecoilState<any>;\r\n   return returnValue;\r\n};\r\n\r\nexport default getByName;\r\n","import { RecoilState, useSetRecoilState } from \"recoil\";\r\nimport getByName from \"../recoil/utils/getByName\";\r\n\r\nfunction useChangeState(name: string) {\r\n   const stateAtom: RecoilState<any> | undefined = getByName(name);\r\n   const setState = useSetRecoilState(stateAtom);\r\n   return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState(event.target.value);\r\n   };\r\n}\r\n\r\nexport default useChangeState;\r\n","import { RecoilState, useRecoilValue } from \"recoil\";\r\nimport getByName from \"../recoil/utils/getByName\";\r\n\r\nfunction useStateValue(name: string) {\r\n   const stateAtom: RecoilState<any> | undefined = getByName(name);\r\n   const stateValue = useRecoilValue(stateAtom);\r\n   return stateValue;\r\n}\r\n\r\nexport default useStateValue;\r\n","import { Box, makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport useChangeState from \"../hooks/UseChangeState\";\r\nimport useStateValue from \"../hooks/UseStateValue\";\r\nimport ITextProps from \"./types/TextProps\";\r\n\r\nconst useStyles = makeStyles({\r\n   enterText: {\r\n      margin: \"5px auto\",\r\n      textAlign: \"center\",\r\n      fontSize: \"20px\",\r\n   },\r\n   enterTextInput: {\r\n      borderRadius: \"5px\",\r\n      color: \"black\",\r\n      fontSize: \"20px\",\r\n      width: \"90%\",\r\n   },\r\n});\r\n\r\n/**\r\n * General Text Input\r\n */\r\nconst EnterText: FunctionComponent<ITextProps> = (props: ITextProps) => {\r\n   const { fieldName, type } = props;\r\n   const classes = useStyles();\r\n\r\n   const onChange = useChangeState(fieldName);\r\n   const text = useStateValue(fieldName);\r\n\r\n   return (\r\n      <Box component='div' className={classes.enterText}>\r\n         <Box component='div'>{fieldName}:</Box>\r\n         <TextField\r\n            type={type}\r\n            placeholder={fieldName}\r\n            value={text}\r\n            className={classes.enterTextInput}\r\n            name={fieldName}\r\n            onChange={onChange}\r\n         />\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default EnterText;\r\n","import Token from \"../types/Token\";\r\n\r\nconst setToken = (data: Token) => {\r\n   if (data && data.token) localStorage.setItem(\"token\", data.token);\r\n};\r\n\r\nexport default setToken;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useCommonStyles = makeStyles({\r\n   signUpBox: {\r\n      margin: \"auto\",\r\n      border: \"1px solid #707070\",\r\n      borderRadius: \"5px\",\r\n      padding: \"10px\",\r\n      display: \"block\",\r\n      width: \"20%\",\r\n   },\r\n   signUpButton: {\r\n      margin: \"5px auto\",\r\n      textAlign: \"center\",\r\n   },\r\n});\r\n\r\nexport default useCommonStyles;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Signup.css\";\r\nimport {\r\n   emailState,\r\n   firstNameState,\r\n   lastNameState,\r\n   passwordState,\r\n} from \"../recoil\";\r\n\r\nimport generalFetch from \"./fetch/generalfetch\";\r\nimport useCleanup from \"../hooks/Cleanup\";\r\nimport EnterText from \"./EnterText\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport setToken from \"./utils/settoken\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useCommonStyles from \"./styles\";\r\nimport userIdState from \"../recoil/UserId\";\r\n\r\n/**\r\n * Sign Up Page\r\n */\r\nconst SignUp: FunctionComponent = () => {\r\n   const [firstName, setFirstName] = useRecoilState(firstNameState);\r\n   const [lastName, setLastName] = useRecoilState(lastNameState);\r\n   const [password, setPassword] = useRecoilState(passwordState);\r\n   const [email, setEmail] = useRecoilState(emailState);\r\n   const [login, setLogin] = useRecoilState(loginState);\r\n   const [userId, setUserId] = useRecoilState(userIdState);\r\n\r\n   const classes = useCommonStyles();\r\n\r\n   useCleanup<string>([setFirstName, setLastName, setPassword, setEmail], \"\");\r\n\r\n   const onSubmit = (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      const response = generalFetch(\r\n         \"users/signup\",\r\n         JSON.stringify({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            password: password,\r\n         }),\r\n         {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n         },\r\n         \"POST\"\r\n      );\r\n      response.then((value) => {\r\n         if (typeof value === \"number\") {\r\n            // do nothing\r\n         } else if (value) {\r\n            setLogin(true);\r\n            setUserId(value.id);\r\n            setToken(value.token);\r\n            return <Redirect to=\"/\" />;\r\n         }\r\n      });\r\n   };\r\n\r\n   return !login ? (\r\n      <Box component=\"form\" className={classes.signUpBox} onSubmit={onSubmit}>\r\n         <EnterText fieldName={\"First Name\"} type=\"text\" />\r\n         <EnterText fieldName={\"Last Name\"} type=\"text\" />\r\n         <EnterText fieldName={\"Email\"} type=\"email\" />\r\n         <EnterText fieldName={\"Password\"} type=\"password\" />\r\n         <Box component=\"div\" className={classes.signUpButton}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n               Sign Up\r\n            </Button>\r\n         </Box>\r\n      </Box>\r\n   ) : (\r\n      <Redirect to=\"/\" />\r\n   );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Signup.css\";\r\nimport { emailState, passwordState } from \"../recoil\";\r\nimport useCleanup from \"../hooks/Cleanup\";\r\nimport generalFetch from \"./fetch/generalfetch\";\r\nimport setToken from \"./utils/settoken\";\r\nimport EnterText from \"./EnterText\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useCommonStyles from \"./styles\";\r\nimport userIdState from \"../recoil/UserId\";\r\n\r\n/**\r\n * Sign In Page\r\n */\r\nconst SignIn: FunctionComponent = () => {\r\n   const [password, setPassword] = useRecoilState(passwordState);\r\n   const [email, setEmail] = useRecoilState(emailState);\r\n   const [login, setLogin] = useRecoilState(loginState);\r\n   const [userId, setUserId] = useRecoilState(userIdState);\r\n\r\n   const classes = useCommonStyles();\r\n\r\n   useCleanup<string>([setPassword, setEmail], \"\");\r\n\r\n   const onClick = (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      const response = generalFetch(\r\n         \"auth/signin\",\r\n         JSON.stringify({\r\n            email: email,\r\n            password: password,\r\n         }),\r\n         {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n         },\r\n         \"POST\"\r\n      );\r\n      response.then((value) => {\r\n         if (typeof value === \"number\") {\r\n            // do nothing\r\n         } else if (value) {\r\n            setLogin(true);\r\n            setUserId(value.id);\r\n            setToken(value);\r\n            return <Redirect to=\"/\" />;\r\n         }\r\n      });\r\n   };\r\n\r\n   return !login ? (\r\n      <Box component=\"form\" className={classes.signUpBox} onSubmit={onClick}>\r\n         <EnterText fieldName={\"Email\"} type=\"text\" />\r\n\r\n         <EnterText fieldName={\"Password\"} type=\"password\" />\r\n         <Box component=\"div\" className={classes.signUpButton}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n               Sign In\r\n            </Button>\r\n         </Box>\r\n      </Box>\r\n   ) : (\r\n      <Redirect to=\"/\" />\r\n   );\r\n};\r\n\r\nexport default SignIn;\r\n","import { Button, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n   signIn: {\r\n      \"&:hover\": {\r\n         content: '\"\"',\r\n         color: \"black\",\r\n         transitionDuration: \".5s\",\r\n      },\r\n      \"textDecoration\": \"none\",\r\n      \"color\": \"white\",\r\n      \"fontSize\": \"2rem\",\r\n   },\r\n});\r\n\r\nconst Home: FunctionComponent = () => {\r\n   const classes = useStyles();\r\n   return (\r\n      <>\r\n         <Typography variant='h1'>Home</Typography>\r\n\r\n         <Link to={\"/signin\"} className={classes.signIn}>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n               Sign In\r\n            </Button>\r\n         </Link>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","import generalFetch from \"./generalfetch\";\r\n\r\nconst authenticatedFetch = (\r\n   path: string,\r\n   body: BodyInit | undefined,\r\n   method: string\r\n) => {\r\n   const headers: HeadersInit = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authentication\": \"bearer \" + localStorage.getItem(\"token\"),\r\n   };\r\n   return generalFetch(path, body, headers, method);\r\n};\r\n\r\nexport default authenticatedFetch;\r\n","import { atom } from \"recoil\";\r\nimport IRecipeData from \"../dashboard/types/RecipeData\";\r\n\r\nconst userRecipesState = atom({\r\n   key: \"userRecipesState\",\r\n   default: [] as IRecipeData[],\r\n});\r\n\r\nexport default userRecipesState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst popupState = atom({\r\n   key: \"popupState\",\r\n   default: false,\r\n});\r\n\r\nexport default popupState;\r\n","import { atom } from \"recoil\";\r\n\r\nconst currentRecipeUrl = atom({\r\n   key: \"currentRecipeUrl\",\r\n   default: \"\",\r\n});\r\n\r\nexport default currentRecipeUrl;\r\n","import { Box, Button, TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport authenticatedFetch from \"../../../account/fetch/authenticatedfetch\";\r\nimport userRecipesState from \"../../../recoil/UserRecipes\";\r\nimport currentRecipeUrl from \"../../recoil/CurrentRecipeUrl\";\r\nimport IRecipeData from \"../../types/RecipeData\";\r\n\r\nconst UrlInput = () => {\r\n   const [url, setUrl] = useRecoilState(currentRecipeUrl);\r\n   const [recipeData, setRecipeData] = useRecoilState(userRecipesState);\r\n\r\n   const onClick = (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      authenticatedFetch(\r\n         \"content/recipes\",\r\n         JSON.stringify({ url }),\r\n         \"POST\"\r\n      ).then((value: IRecipeData) => {\r\n         const newRecipeData = recipeData.slice();\r\n         newRecipeData.push(value);\r\n         setRecipeData(newRecipeData);\r\n      });\r\n   };\r\n\r\n   const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setUrl(e.target.value);\r\n   };\r\n\r\n   return (\r\n      <Box component=\"form\" onSubmit={onClick}>\r\n         <TextField\r\n            type=\"text\"\r\n            value={url}\r\n            onChange={onChange}\r\n            placeholder=\"Recipe Url\"\r\n         />\r\n         <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Submit URL\r\n         </Button>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default UrlInput;\r\n","import { Input } from \"@material-ui/core\";\r\nimport React, { FunctionComponent, useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport popupState from \"../../recoil/Popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport UrlInput from \"./UrlInput\";\r\n\r\nconst RecipePopup: FunctionComponent = () => {\r\n   // make state for url input in recoil\r\n   // make recoil state for open\r\n   const [url, setUrl] = useState(\"\");\r\n   const [open, setOpen] = useRecoilState(popupState);\r\n\r\n   const closeModal = () => setOpen(false);\r\n\r\n   const onChange = (\r\n      e: React.ChangeEvent<HTMLInputElement>,\r\n      setState: React.Dispatch<React.SetStateAction<string>>\r\n   ) => {\r\n      setState(e.target.value);\r\n   };\r\n\r\n   return (\r\n      <Popup\r\n         open={open}\r\n         closeOnDocumentClick\r\n         onClose={closeModal}\r\n         position=\"center center\"\r\n      >\r\n         <UrlInput />\r\n      </Popup>\r\n   );\r\n};\r\n\r\nexport default RecipePopup;\r\n","import { Box, Button, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport popupState from \"../../recoil/Popup\";\r\n\r\nconst useStyles = makeStyles({\r\n   recipeHeaderRight: {\r\n      float: \"right\",\r\n      marginRight: \"8px\",\r\n      marginBlockStart: \"0.83em\",\r\n      marginBlockEnd: \"0.3em\",\r\n      marginInlineStart: \"0\",\r\n   },\r\n});\r\n\r\nconst AddRecipe = () => {\r\n   const [open, setOpen] = useRecoilState(popupState);\r\n\r\n   const classes = useStyles();\r\n\r\n   const onClick = () => {\r\n      setOpen(true);\r\n   }\r\n\r\n   return (\r\n      <Box component='span' className={classes.recipeHeaderRight}>\r\n         <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\r\n            Add Recipe\r\n         </Button>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default AddRecipe;\r\n","import { makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n   myRecipes: {\r\n      marginBlockEnd: \"0.3em\",\r\n   },\r\n});\r\n\r\nconst MyRecipes = () => {\r\n   const classes = useStyles();\r\n   return (\r\n      <Typography variant=\"h2\" className={classes.myRecipes}>\r\n         My Recipes\r\n      </Typography>\r\n   );\r\n};\r\n\r\nexport default MyRecipes;\r\n","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddRecipe from \"./AddRecipe\";\r\nimport MyRecipes from \"./MyRecipes\";\r\n\r\nconst useStyles = makeStyles({\r\n   recipeHeader: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      borderBottom: \"1px solid #707070\",\r\n   },\r\n   recipeHeaderItemWrapper: {\r\n      width: \"50%\",\r\n      padding: 0,\r\n      margin: 0,\r\n   },\r\n});\r\n\r\nconst RecipeHeader = () => {\r\n   const classes = useStyles();\r\n   return (\r\n      <Box component=\"div\" className={classes.recipeHeader}>\r\n         <Box component=\"span\" className={classes.recipeHeaderItemWrapper}>\r\n            <MyRecipes />\r\n         </Box>\r\n         <Box component=\"span\" className={classes.recipeHeaderItemWrapper}>\r\n            <AddRecipe />\r\n         </Box>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default RecipeHeader;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport { FunctionComponent } from \"react\";\r\nimport IUrlProps from \"./types/recipecardurlprops\";\r\n\r\nconst useStyles = makeStyles({\r\n   openExternal: {\r\n      \"&:hover\": {\r\n         cursor: \"pointer\",\r\n      },\r\n   },\r\n});\r\n\r\nconst RecipeCardOpenUrl: FunctionComponent<IUrlProps> = (props: IUrlProps) => {\r\n   const { url } = props;\r\n\r\n   const classes = useStyles();\r\n\r\n   const open = () => {\r\n      const win = window.open(url, \"_blank\");\r\n      win?.focus();\r\n   };\r\n\r\n   return <OpenInNewIcon className={classes.openExternal} onClick={open} />;\r\n};\r\n\r\nexport default RecipeCardOpenUrl;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport RecipeCardOpenUrl from \"./RecipeCardOpenUrl\";\r\nimport IRecipeCardControlProps from \"./types/recipecardcontrolprops\";\r\nimport IUrlProps from \"./types/recipecardurlprops\";\r\n\r\nconst RecipeCardControl: FunctionComponent<IRecipeCardControlProps> = (\r\n   props: IRecipeCardControlProps\r\n) => {\r\n   const { url, id } = props;\r\n\r\n   return (\r\n      <>\r\n         <RecipeCardOpenUrl url={url} />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default RecipeCardControl;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport IRecipeCardDescriptionProps from \"./types/recipecarddescription\";\r\n\r\nconst RecipeCardDescription: FunctionComponent<IRecipeCardDescriptionProps> = (\r\n   props: IRecipeCardDescriptionProps\r\n) => {\r\n   const { description } = props;\r\n   return <Typography>{description}</Typography>;\r\n};\r\n\r\nexport default RecipeCardDescription;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport IRecipeCardTitleProps from \"./types/recipecardtitle\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n   title: {\r\n      fontSize: \"2rem\",\r\n      borderBottom: \"1px solid #707070\",\r\n   },\r\n});\r\n\r\nconst RecipeCardTitle: FunctionComponent<IRecipeCardTitleProps> = (\r\n   props: IRecipeCardTitleProps\r\n) => {\r\n   const classes = useStyles();\r\n   const { title } = props;\r\n   return (\r\n      <Typography variant=\"h3\" className={classes.title}>\r\n         {title}\r\n      </Typography>\r\n   );\r\n};\r\n\r\nexport default RecipeCardTitle;\r\n","import { Box } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport IRecipeCardProps from \"../../types/RecipeCardProps\";\r\nimport RecipeCardControl from \"./RecipeCardControl\";\r\nimport RecipeCardDescription from \"./RecipeCardDescription\";\r\nimport RecipeCardTitle from \"./RecipeCardTitle\";\r\n\r\nconst RecipeCardInfo: FunctionComponent<IRecipeCardProps> = (\r\n   props: IRecipeCardProps\r\n) => {\r\n   const { metadata } = props;\r\n   const { title, description, url, _id } = metadata;\r\n   return (\r\n      <Box component=\"span\">\r\n         <RecipeCardTitle title={title} />\r\n         <RecipeCardControl url={url} id={_id} />\r\n         <RecipeCardDescription description={description} />\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default RecipeCardInfo;\r\n","import { Card, CardContent, makeStyles } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport IRecipeCardProps from \"../../types/RecipeCardProps\";\r\nimport RecipeCardInfo from \"./RecipeCardInfo\";\r\n\r\nconst useStyles = makeStyles({\r\n   root: {\r\n      minWidth: 275,\r\n      maxWidth: 500,\r\n      margin: 50,\r\n   },\r\n   content: {\r\n      minWidth: 275,\r\n      maxWidth: 500,\r\n      padding: 15,\r\n   },\r\n   image: {\r\n      maxWidth: 500,\r\n      borderRadius: 5,\r\n   },\r\n   imageContainer: {\r\n      padding: 0,\r\n   },\r\n});\r\n\r\nconst RecipeCard: FunctionComponent<IRecipeCardProps> = (\r\n   props: IRecipeCardProps\r\n) => {\r\n   const classes = useStyles();\r\n\r\n   const { metadata } = props;\r\n   const { title, imageUrl } = metadata;\r\n   return (\r\n      <Card raised className={classes.root}>\r\n         <CardContent component=\"div\" className={classes.imageContainer}>\r\n            <img\r\n               src={imageUrl}\r\n               alt={`${title}`}\r\n               className={classes.image}\r\n            ></img>\r\n         </CardContent>\r\n         <CardContent className={classes.content} component=\"div\">\r\n            <RecipeCardInfo metadata={metadata} />\r\n         </CardContent>\r\n      </Card>\r\n   );\r\n};\r\n\r\nexport default RecipeCard;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport authenticatedFetch from \"../account/fetch/authenticatedfetch\";\r\nimport userIdState from \"../recoil/UserId\";\r\nimport userRecipesState from \"../recoil/UserRecipes\";\r\nimport RecipePopup from \"./components/add-recipe/RecipePopup\";\r\nimport RecipeHeader from \"./components/header/RecipeHeader\";\r\nimport RecipeCard from \"./components/recipe-card/RecipeCard\";\r\nimport IRecipeData from \"./types/RecipeData\";\r\n\r\nconst Dashboard: FunctionComponent = () => {\r\n   const [recipeData, setRecipeData] = useRecoilState(userRecipesState);\r\n   const userId = useRecoilValue(userIdState);\r\n\r\n   useEffect(() => {\r\n      authenticatedFetch(\r\n         `/content/recipes?uid=${userId}`,\r\n         undefined,\r\n         \"GET\"\r\n      ).then((value: IRecipeData[] | number) => {\r\n         if (value && !(typeof value === \"number\")) setRecipeData(value);\r\n      });\r\n   }, [userId]);\r\n\r\n   // if (process.env.NODE_ENV === \"development\") {\r\n   //    recipe_data = require(\"./dev-data/data\").default;\r\n   // }\r\n   return (\r\n      <>\r\n         <RecipeHeader />\r\n         <Grid container spacing={0}>\r\n            <RecipePopup />\r\n            {recipeData &&\r\n               recipeData.map((data: IRecipeData) => (\r\n                  <Grid item key={data._id}>\r\n                     <RecipeCard metadata={data} />\r\n                  </Grid>\r\n               ))}\r\n         </Grid>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport loginState from \"../recoil/LoginState\";\r\nimport IAuthProps from \"./types/AuthProps\";\r\nimport Home from \"../home/Home\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport authenticatedFetch from \"../account/fetch/authenticatedfetch\";\r\nimport setToken from \"../account/utils/settoken\";\r\nimport userIdState from \"../recoil/UserId\";\r\n\r\nconst Authorization = (props: IAuthProps) => {\r\n   const [login, setLogin] = useRecoilState(loginState);\r\n   const [userId, setUserIdState] = useRecoilState(userIdState);\r\n\r\n   useEffect(() => {\r\n      const response = authenticatedFetch(\r\n         \"auth/verify\",\r\n         JSON.stringify({}),\r\n         \"POST\"\r\n      );\r\n      response.then((value) => {\r\n         if (typeof value === \"number\") {\r\n            setLogin(false);\r\n         } else if (value) {\r\n            setLogin(true);\r\n            setToken(value.token);\r\n            setUserIdState(value.id);\r\n         }\r\n      });\r\n      // auth, check if logged in blah blah blah\r\n      //   setLogin(true);\r\n   }, [login, setLogin]);\r\n\r\n   return <>{login ? <Dashboard /> : <Home />}</>;\r\n};\r\n\r\nexport default Authorization;\r\n","import {FunctionComponent} from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport {RecoilRoot} from 'recoil';\r\n\r\nimport Header from './common/Header';\r\nimport SignUp from './account/Signup';\r\n\r\nimport {\r\n   createMuiTheme,\r\n   makeStyles,\r\n   ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport SignIn from './account/Signin';\r\nimport Authorization from './auth/Authorization'\r\n\r\nconst useStyles = makeStyles({\r\n   App: {\r\n      height: \"100vh\",\r\n      padding: 0,\r\n   },\r\n   content: {\r\n      height: \"100%\",\r\n      marginTop: \"20px\",\r\n   },\r\n});\r\n\r\nconst App: FunctionComponent = () => {\r\n  const theme = createMuiTheme({\r\n     palette: {\r\n        primary: {\r\n           main: \"#01A299\",\r\n           contrastText: \"#fff\",\r\n        },\r\n        secondary: {\r\n           main: \"#6200EE\",\r\n           contrastText: \"#fff\",\r\n        },\r\n     },\r\n     typography: {\r\n        fontFamily: ['\"Noto Sans\"', 'Roboto', 'serif'].join(','),\r\n     },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n     <RecoilRoot>\r\n        <Router>\r\n           <ThemeProvider theme={theme}>\r\n              <div className={classes.App}>\r\n                 <Header />\r\n                 <div className={classes.content}>\r\n                    <Switch>\r\n                       <Route path=\"/\" exact component={Authorization} />\r\n                       <Route path=\"/signup\" exact component={SignUp} />\r\n                       <Route path=\"/signin\" exact component={SignIn} />\r\n                    </Switch>\r\n                 </div>\r\n              </div>\r\n           </ThemeProvider>\r\n        </Router>\r\n     </RecoilRoot>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// Breaks it? https://github.com/facebook/create-react-app/issues/10109#issuecomment-752421290 \r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}